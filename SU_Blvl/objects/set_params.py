import bpy

class VIEW3D_PT_BLVL_NAVI(bpy.types.Panel):
    bl_space_type = 'VIEW_3D'
    bl_region_type = 'UI'
    bl_category = 'BLVL'
    bl_label = 'NAVI'
    def draw (self, context):
        layout = self.layout
        layout.label(text="NAVI options, the same as Import/Export menu")
        layout.operator("import_scene.navixml")
        layout.operator("import_scene.navixmlbin")
        layout.separator()
        layout.operator("export_scene.navixml")

class VIEW3D_PT_BLVL_objprop(bpy.types.Panel):
    bl_space_type = 'VIEW_3D'
    bl_region_type = 'UI'
    bl_category = 'BLVL'
    bl_label = 'Object Properties'
    def draw (self, context):
        layout = self.layout
        col = layout.column(align=True)
        if context.object.data.name == "EvilFloor_Egg3M":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_ResetTime")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "Egg_Fan":
            col.prop(context.object, "float_CenterType")
            col.prop(context.object, "float_FanNum")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilDamageFan":
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Num")
        if context.object.data.name == "EvilBar_EggAa":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "Egg_Thorn":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "Egg_FloorB":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "EvilPipeThornRing":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "EvilCoffeeCup":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_PathSearch")
            col.prop(context.object, "float_PathVel")
            col.prop(context.object, "float_WaitTime")
        if context.object.data.name == "Egg_TimeFloor":
            col.prop(context.object, "float_ActionType")
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_AliveTime")
            col.prop(context.object, "integer_FirstState")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_HeraldTime")
            col.prop(context.object, "integer_ModelType")
            col.prop(context.object, "float_OffTime")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnTime")
            col.prop(context.object, "float_Phase")
        if context.object.data.name == "Egg_BeltCollisionSV":
            col.prop(context.object, "bool_EnableReverse")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsRightDirection")
            col.prop(context.object, "float_LeftTime")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MaterialIndex")
            col.prop(context.object, "float_RightTime")
            col.prop(context.object, "float_Speed")
            col.prop(context.object, "float_Width")
        if context.object.data.name == "Laser":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "integer_ModelType")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_OffTime")
            col.prop(context.object, "float_OnTime")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
        if context.object.data.name == "EvilRevolveHandle_Eggmanland":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsPause")
            col.prop(context.object, "float_OffTime")
            col.prop(context.object, "float_OnTime")
            col.prop(context.object, "float_Phase")
        if context.object.data.name == "EvilHandle_EggAa":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "Egg_FloorA":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "EvilLiftCup":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "EvilFloor_Egg5M":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_ResetTime")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "LaserColumn":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Length")
        if context.object.data.name == "Egg_Coaster":
            col.prop(context.object, "float_Acceleration")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_MaxSpeed")
            col.prop(context.object, "float_MinSpeed")
        if context.object.data.name == "Egg_Cutter":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsLoop")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsRotation")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_Speed")
        if context.object.data.name == "EvilBreakableBar_EggAa":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_BreakTime")
            col.prop(context.object, "bool_CanBreak")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DefaultMode")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsShakeOnRelease")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_ResurgeTime")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
            col.prop(context.object, "float_Vitality")
        if context.object.data.name == "EvilEggTankBreakBorder":
            col.prop(context.object, "float_FallTime")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilBreakDoor_Eggmanland":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_NoBreak")
        if context.object.data.name == "TimeSwitch2":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilFlameNozzle_Eggmanland":
            col.prop(context.object, "float_AttackInterval")
            col.prop(context.object, "float_AttackTime")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Intencity")
            col.prop(context.object, "float_IntencityEvil")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_ShockTimeEvil")
            col.prop(context.object, "float_StartTime")
            col.prop(context.object, "integer_Type")
        if context.object.data.name == "Egg_BeltCollision":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MaterialIndex")
            col.prop(context.object, "float_PatternIndex")
            col.prop(context.object, "float_RingInterval")
            col.prop(context.object, "float_Speed")
            col.prop(context.object, "float_TimeInterval")
            col.prop(context.object, "float_Width")
        if context.object.data.name == "EvilBigElevator":
            col.prop(context.object, "float_EnemyMaxCount")
            col.prop(context.object, "float_FirstState")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_HangerNum")
            col.prop(context.object, "float_Personality")
        if context.object.data.name == "EvilDamageFanSmall_Eggmanland":
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_Damage")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilRevolveBar_Eggmanland":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsPause")
            col.prop(context.object, "float_OffTime")
            col.prop(context.object, "float_OnTime")
            col.prop(context.object, "float_Phase")
        if context.object.data.name == "Egg_Block":
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsPush")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_OffTime")
            col.prop(context.object, "float_OnTime")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_Type")
        if context.object.data.name == "EvilLiftDoor_EggB":
            col.prop(context.object, "float_Friction")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Kasoku")
        if context.object.data.name == "EvilSwitchDoor_EggA":
            col.prop(context.object, "float_FirstState")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "Handle":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Layer")
            col.prop(context.object, "float_ModelRotation")
        if context.object.data.name == "EvilTimeBomb":
            col.prop(context.object, "bool_IsRestore")
            col.prop(context.object, "float_TimeLimit")
        if context.object.data.name == "E_SmallMan":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Layer")
        if context.object.data.name == "DoorType01":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Layer")
        if context.object.data.name == "MovingFloorEvil":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_Direction")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Layer")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_RotationAngle")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_ScaleX")
            col.prop(context.object, "float_ScaleY")
            col.prop(context.object, "float_ScaleZ")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "DoorEvil":
            col.prop(context.object, "float_FirstState")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Layer")
        if context.object.data.name == "Rock":
            col.prop(context.object, "float_Energy")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "Column":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Layer")
            col.prop(context.object, "float_Length")
        if context.object.data.name == "GroundBox":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Layer")
            col.prop(context.object, "float_Path0_Length")
            col.prop(context.object, "float_Path0_Offset")
            col.prop(context.object, "float_Path1_Length")
            col.prop(context.object, "float_Path1_Offset")
            col.prop(context.object, "float_Path2_Length")
            col.prop(context.object, "float_Path2_Offset")
            col.prop(context.object, "float_Path3_Length")
            col.prop(context.object, "float_Path3_Offset")
            col.prop(context.object, "float_ScaleX")
            col.prop(context.object, "float_ScaleY")
            col.prop(context.object, "float_ScaleZ")
        if context.object.data.name == "EvilChinaLantanC":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilChinaLantanA":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "ChinaStandLantanB":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilChinaStandLantanA":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilChinaLantanD":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "ChinaStandLantanA":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "ChinaLantanA":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilChinaStandLantanB":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "ChinaLantanB":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "ChinaLantanD":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilChinaLantanB":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "IrremovableMobChina":
            col.prop(context.object, "string_CharaType")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_Motion")
        if context.object.data.name == "ObjCameraPointMoveOffset":
            col.prop(context.object, "float_Ease_Time_Enter")
            col.prop(context.object, "float_Ease_Time_Leave")
            col.prop(context.object, "float_Fovy")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsCameraView")
            col.prop(context.object, "bool_IsCollision")
            col.prop(context.object, "bool_IsControllable")
            col.prop(context.object, "float_Offset_Far__Front_")
            col.prop(context.object, "float_Offset_Far__Height")
            col.prop(context.object, "float_Offset_Far__Length")
            col.prop(context.object, "float_Offset_Far__Point_Height")
            col.prop(context.object, "float_Offset_Near_Front_")
            col.prop(context.object, "float_Offset_Near_Height")
            col.prop(context.object, "float_Offset_Near_Length")
            col.prop(context.object, "float_Offset_Near_Point_Height")
            col.prop(context.object, "float_Target_Type")
            col.prop(context.object, "float_ZRot")
        if context.object.data.name == "ChangeVolumeCameraSwitchFromTarget":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Length")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "integer_DefaultStatus")
            col.prop(context.object, "float_Ease_Time_Enter")
            col.prop(context.object, "float_Ease_Time_Leave")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsCameraView")
            col.prop(context.object, "integer_LineType")
            col.prop(context.object, "integer_Shape_Type")
        if context.object.data.name == "ObjCameraFix":
            col.prop(context.object, "float_Ease_Time_Enter")
            col.prop(context.object, "float_Ease_Time_Leave")
            col.prop(context.object, "float_Fovy")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsCameraView")
            col.prop(context.object, "bool_IsCastShadow")
            col.prop(context.object, "bool_IsCollision")
            col.prop(context.object, "bool_IsControllable")
            col.prop(context.object, "float_Range")
            col.prop(context.object, "vector_TargetPosition")
            col.prop(context.object, "float_ZRot")
        if context.object.data.name == "ChangeCamera2D_Begin":
            col.prop(context.object, "float_BaseSpacePathPosition")
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_Distance")
            col.prop(context.object, "float_Ease_Time")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_ID")
            col.prop(context.object, "bool_IsBaseSpacePlayer")
            col.prop(context.object, "bool_IsCameraView")
            col.prop(context.object, "bool_IsPositionBasePlayer")
            col.prop(context.object, "float_Rotation_Y")
            col.prop(context.object, "float_Rotation_Z")
            col.prop(context.object, "float_Target_Front_Offset_Bias")
            col.prop(context.object, "float_Target_Front_Offset_Max")
            col.prop(context.object, "float_Target_Front_Offset_Speed_Scale")
            col.prop(context.object, "float_Target_Up_Offset")
        if context.object.data.name == "ObjCameraParallel":
            col.prop(context.object, "float_Distance")
            col.prop(context.object, "float_Ease_Time_Enter")
            col.prop(context.object, "float_Ease_Time_Leave")
            col.prop(context.object, "float_Fovy")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsCameraView")
            col.prop(context.object, "bool_IsCastShadow")
            col.prop(context.object, "bool_IsCollision")
            col.prop(context.object, "bool_IsControllable")
            col.prop(context.object, "float_OffsetPitch")
            col.prop(context.object, "float_OffsetYaw")
            col.prop(context.object, "float_Pitch")
            col.prop(context.object, "float_Range")
            col.prop(context.object, "float_TargetOffset_Front")
            col.prop(context.object, "float_TargetOffset_Right")
            col.prop(context.object, "float_TargetOffset_Up")
            col.prop(context.object, "vector_TargetPositionFix")
            col.prop(context.object, "float_Target_Type")
            col.prop(context.object, "float_Yaw")
            col.prop(context.object, "float_ZRot")
        if context.object.data.name == "ObjCameraBlend":
            col.prop(context.object, "float_BlendBase")
            col.prop(context.object, "float_BlendSpeed")
            col.prop(context.object, "float_BlendType")
            col.prop(context.object, "id_list_CameraList")
            col.prop(context.object, "float_Ease_Time_Enter")
            col.prop(context.object, "float_Ease_Time_Leave")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsCameraView")
            col.prop(context.object, "bool_IsCollision")
            col.prop(context.object, "float_TargetOffset_Front")
            col.prop(context.object, "float_TargetOffset_Right")
            col.prop(context.object, "float_TargetOffset_Up")
            col.prop(context.object, "float_Target_Type")
            col.prop(context.object, "vector_TargetPositionFix")
        if context.object.data.name == "ObjCameraCrossRail":
            col.prop(context.object, "float_AxisType")
            col.prop(context.object, "float_BackStopperPos")
            col.prop(context.object, "float_Distance")
            col.prop(context.object, "float_Ease_Time_Enter")
            col.prop(context.object, "float_Ease_Time_Leave")
            col.prop(context.object, "float_Fovy")
            col.prop(context.object, "float_FrontStopperPos")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsCameraView")
            col.prop(context.object, "bool_IsCastShadow")
            col.prop(context.object, "bool_IsCollision")
            col.prop(context.object, "bool_IsControllable")
            col.prop(context.object, "float_LeftSideAngleAxis")
            col.prop(context.object, "float_LeftSideType")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_LimitLeftAngleAxis")
            col.prop(context.object, "float_LimitRightAngleAxis")
            col.prop(context.object, "float_Pitch")
            col.prop(context.object, "float_RightSideAngleAxis")
            col.prop(context.object, "float_RightSideType")
            col.prop(context.object, "float_Sensitivity")
            col.prop(context.object, "float_VerticalType")
            col.prop(context.object, "float_Yaw")
            col.prop(context.object, "float_Range")
        if context.object.data.name == "ChangeCamera2D_End":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_ID")
        if context.object.data.name == "ObjCamera2D":
            col.prop(context.object, "float_BaseSpacePathPosition")
            col.prop(context.object, "float_Distance")
            col.prop(context.object, "float_Ease_Time_Enter")
            col.prop(context.object, "float_Ease_Time_Leave")
            col.prop(context.object, "float_Fovy")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsBaseSpacePlayer")
            col.prop(context.object, "bool_IsCameraView")
            col.prop(context.object, "bool_IsCollision")
            col.prop(context.object, "bool_IsPositionBasePlayer")
            col.prop(context.object, "float_Rotation_Y")
            col.prop(context.object, "float_Rotation_Z")
            col.prop(context.object, "float_Target_Front_Offset_Bias")
            col.prop(context.object, "float_Target_Front_Offset_Max")
            col.prop(context.object, "float_Target_Front_Offset_Speed_Scale")
            col.prop(context.object, "float_Target_Up_Offset")
        if context.object.data.name == "ObjCameraPan":
            col.prop(context.object, "float_CameraPositionMode")
            col.prop(context.object, "float_Distance")
            col.prop(context.object, "float_Ease_Time_Enter")
            col.prop(context.object, "float_Ease_Time_Leave")
            col.prop(context.object, "float_FaceType")
            col.prop(context.object, "float_Fovy")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsCameraView")
            col.prop(context.object, "bool_IsCastShadow")
            col.prop(context.object, "bool_IsCollision")
            col.prop(context.object, "bool_IsControllable")
            col.prop(context.object, "float_OffsetPitch")
            col.prop(context.object, "float_OffsetYaw")
            col.prop(context.object, "float_Radius")
            col.prop(context.object, "float_Range")
            col.prop(context.object, "float_TargetOffset_Front")
            col.prop(context.object, "float_TargetOffset_Right")
            col.prop(context.object, "float_TargetOffset_Up")
            col.prop(context.object, "vector_TargetPositionFix")
            col.prop(context.object, "float_Target_Type")
            col.prop(context.object, "float_ZRot")
        if context.object.data.name == "ObjCameraPathPath":
            col.prop(context.object, "float_Ease_Time_Enter")
            col.prop(context.object, "float_Ease_Time_Leave")
            col.prop(context.object, "integer_EyePathID")
            col.prop(context.object, "integer_EyePathType")
            col.prop(context.object, "float_EyeSpeed")
            col.prop(context.object, "float_Fovy")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsCameraView")
            col.prop(context.object, "bool_IsCollision")
            col.prop(context.object, "bool_IsControllable")
            col.prop(context.object, "integer_LookPathID")
            col.prop(context.object, "integer_LookPathType")
            col.prop(context.object, "vector_LookPathPosition")
            col.prop(context.object, "float_LookSpeed")
            col.prop(context.object, "float_OffsetOnEyePath")
            col.prop(context.object, "float_OffsetOnLookPath")
            col.prop(context.object, "float_TargetOffset_Front")
            col.prop(context.object, "float_TargetOffset_Right")
            col.prop(context.object, "float_TargetOffset_Up")
            col.prop(context.object, "float_Target_Type")
            col.prop(context.object, "float_ZRot")
        if context.object.data.name == "ChangeVolumeCamera":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Length")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "integer_DefaultStatus")
            col.prop(context.object, "float_Ease_Time_Enter")
            col.prop(context.object, "float_Ease_Time_Leave")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsCameraView")
            col.prop(context.object, "bool_IsCastShadow")
            col.prop(context.object, "bool_IsEnableCollision")
            col.prop(context.object, "integer_LineType")
            col.prop(context.object, "integer_Priority")
            col.prop(context.object, "float_Range")
            col.prop(context.object, "float_Shape_Type")
        if context.object.data.name == "ObjCameraVertical":
            col.prop(context.object, "float_Distance")
            col.prop(context.object, "float_Ease_Time_Enter")
            col.prop(context.object, "float_Ease_Time_Leave")
            col.prop(context.object, "float_Fovy")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsCameraView")
            col.prop(context.object, "bool_IsCastShadow")
            col.prop(context.object, "bool_IsCollision")
            col.prop(context.object, "bool_IsControllable")
            col.prop(context.object, "float_Range")
            col.prop(context.object, "float_TargetOffset_Front")
            col.prop(context.object, "float_TargetOffset_Right")
            col.prop(context.object, "float_TargetOffset_Up")
            col.prop(context.object, "vector_TargetPositionFix")
            col.prop(context.object, "float_Target_Type")
            col.prop(context.object, "float_ZRot")
        if context.object.data.name == "ObjCameraPointTarget":
            col.prop(context.object, "float_Ease_Time_Enter")
            col.prop(context.object, "float_Ease_Time_Leave")
            col.prop(context.object, "float_Fovy")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsCameraView")
            col.prop(context.object, "bool_IsCollision")
            col.prop(context.object, "bool_IsControllable")
            col.prop(context.object, "float_Offset_Far__Front_")
            col.prop(context.object, "float_Offset_Far__Height")
            col.prop(context.object, "float_Offset_Far__Length")
            col.prop(context.object, "float_Offset_Far__Point_Height")
            col.prop(context.object, "float_Offset_Near_Front_")
            col.prop(context.object, "float_Offset_Near_Height")
            col.prop(context.object, "float_Offset_Near_Length")
            col.prop(context.object, "float_Offset_Near_Point_Height")
            col.prop(context.object, "float_Target_Type")
            col.prop(context.object, "float_ZRot")
        if context.object.data.name == "ObjCameraObjectLook":
            col.prop(context.object, "float_Distance")
            col.prop(context.object, "float_Ease_Time_Enter")
            col.prop(context.object, "float_Ease_Time_Leave")
            col.prop(context.object, "float_Fovy")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsCameraView")
            col.prop(context.object, "bool_IsCastShadow")
            col.prop(context.object, "bool_IsCollision")
            col.prop(context.object, "bool_IsControllable")
            col.prop(context.object, "float_Range")
            col.prop(context.object, "float_TargetOffset_Front")
            col.prop(context.object, "float_TargetOffset_Right")
            col.prop(context.object, "float_TargetOffset_Up")
            col.prop(context.object, "float_TargetOffset_Vel")
            col.prop(context.object, "float_TargetOffset_WorldX")
            col.prop(context.object, "float_TargetOffset_WorldY")
            col.prop(context.object, "float_TargetOffset_WorldZ")
            col.prop(context.object, "vector_TargetPositionFix")
            col.prop(context.object, "float_Target_Type")
            col.prop(context.object, "float_VelOffsetXYZ")
            col.prop(context.object, "float_ZRot")
        if context.object.data.name == "ObjCameraPathTarget":
            col.prop(context.object, "float_Ease_Time_Enter")
            col.prop(context.object, "float_Ease_Time_Leave")
            col.prop(context.object, "float_EyePathType")
            col.prop(context.object, "float_EyeSpeed")
            col.prop(context.object, "float_Fovy")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsCameraView")
            col.prop(context.object, "bool_IsCollision")
            col.prop(context.object, "bool_IsControllable")
            col.prop(context.object, "float_OffsetOnEyePath")
            col.prop(context.object, "float_PanAndTangentBlend")
            col.prop(context.object, "float_PathID")
            col.prop(context.object, "float_TargetOffset_Front")
            col.prop(context.object, "float_TargetOffset_Right")
            col.prop(context.object, "float_TargetOffset_Up")
            col.prop(context.object, "float_Target_Type")
            col.prop(context.object, "float_ZRot")
            col.prop(context.object, "vector_TargetPositionFix")
        if context.object.data.name == "CameraCollisionBoard":
            col.prop(context.object, "float_ACameraPriority")
            col.prop(context.object, "float_ALinkSide")
            col.prop(context.object, "float_AObjType")
            col.prop(context.object, "float_BCameraPriority")
            col.prop(context.object, "float_BLinkSide")
            col.prop(context.object, "float_BObjType")
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_EaseTime_AtoB")
            col.prop(context.object, "float_EaseTime_BtoA")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsCastShadow")
            col.prop(context.object, "float_Range")
        if context.object.data.name == "ChangeNormalCameraParam":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Length")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "integer_DefaultStatus")
            col.prop(context.object, "float_EaseTime")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsCameraView")
            col.prop(context.object, "integer_Shape_Type")
            col.prop(context.object, "float_m_ParamDistance")
            col.prop(context.object, "float_m_ParamFovy")
            col.prop(context.object, "float_m_ParamTargetPitch")
            col.prop(context.object, "float_m_ParamTargetYaw")
            col.prop(context.object, "float_m_ParamVerticalOffset")
        if context.object.data.name == "ObjCameraNormal":
            col.prop(context.object, "float_Ease_Time_Enter")
            col.prop(context.object, "float_Ease_Time_Leave")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsCameraView")
            col.prop(context.object, "bool_IsCollision")
            col.prop(context.object, "float_VerticalOffsetForSonic")
            col.prop(context.object, "float_m_ParamDistance")
            col.prop(context.object, "float_m_ParamFovy")
            col.prop(context.object, "float_m_ParamTargetPitch")
            col.prop(context.object, "float_m_ParamTargetYaw")
        if context.object.data.name == "ObjCameraPanVertical":
            col.prop(context.object, "float_CameraPositionMode")
            col.prop(context.object, "float_Distance")
            col.prop(context.object, "float_Ease_Time_Enter")
            col.prop(context.object, "float_Ease_Time_Leave")
            col.prop(context.object, "float_FaceType")
            col.prop(context.object, "float_Fovy")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsCameraView")
            col.prop(context.object, "bool_IsCollision")
            col.prop(context.object, "bool_IsControllable")
            col.prop(context.object, "float_OffsetPitch")
            col.prop(context.object, "float_OffsetYaw")
            col.prop(context.object, "float_Pitch")
            col.prop(context.object, "float_Radius")
            col.prop(context.object, "float_TargetOffset_Front")
            col.prop(context.object, "float_TargetOffset_Right")
            col.prop(context.object, "float_TargetOffset_Up")
            col.prop(context.object, "float_Target_Type")
            col.prop(context.object, "float_ZRot")
        if context.object.data.name == "ObjCameraPoint":
            col.prop(context.object, "float_Distance")
            col.prop(context.object, "float_Ease_Time_Enter")
            col.prop(context.object, "float_Ease_Time_Leave")
            col.prop(context.object, "float_Fovy")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsCameraView")
            col.prop(context.object, "bool_IsCastShadow")
            col.prop(context.object, "bool_IsCollision")
            col.prop(context.object, "bool_IsControllable")
            col.prop(context.object, "float_Range")
            col.prop(context.object, "float_TargetOffset_Front")
            col.prop(context.object, "float_TargetOffset_Right")
            col.prop(context.object, "float_TargetOffset_Up")
            col.prop(context.object, "vector_TargetPositionFix")
            col.prop(context.object, "float_Target_Type")
            col.prop(context.object, "float_ZRot")
        if context.object.data.name == "Evil_IronBox":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilTrickSwitch_Blue":
            col.prop(context.object, "integer_EventOFF")
            col.prop(context.object, "integer_EventON")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "id_list_TargetListOFF")
            col.prop(context.object, "id_list_TargetListON")
            col.prop(context.object, "float_TimerOFF")
            col.prop(context.object, "float_TimerON")
        if context.object.data.name == "EvilTrickStone_Green":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilFlameWall":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Height")
            col.prop(context.object, "float_Intencity")
            col.prop(context.object, "float_IntencityEvil")
            col.prop(context.object, "float_Num")
            col.prop(context.object, "float_ShockTimeEvil")
            col.prop(context.object, "float_Space")
        if context.object.data.name == "EvilTrickSwitch_Red":
            col.prop(context.object, "integer_EventOFF")
            col.prop(context.object, "integer_EventON")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "id_list_TargetListOFF")
            col.prop(context.object, "id_list_TargetListON")
            col.prop(context.object, "float_TimerOFF")
            col.prop(context.object, "float_TimerON")
        if context.object.data.name == "EvilPunchSwitch":
            col.prop(context.object, "integer_EventOFF")
            col.prop(context.object, "integer_EventON")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_OffTimer")
            col.prop(context.object, "id_list_TargetListOFF")
            col.prop(context.object, "id_list_TargetListON")
            col.prop(context.object, "float_TimerOFF")
            col.prop(context.object, "float_TimerON")
            col.prop(context.object, "integer_Type")
        if context.object.data.name == "EvilWaterBarrel":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsRestore")
            col.prop(context.object, "float_ModelIndex")
            col.prop(context.object, "float_TimeLimit")
        if context.object.data.name == "EvilLeverSwitch":
            col.prop(context.object, "float_Eventright_off")
            col.prop(context.object, "float_Eventright_on")
            col.prop(context.object, "float_Friction")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDefaultOn")
            col.prop(context.object, "bool_IsReturn")
            col.prop(context.object, "float_Kasoku")
            col.prop(context.object, "float_ReturnTime")
            col.prop(context.object, "id_list_TargetListright_off")
            col.prop(context.object, "id_list_TargetListright_on")
            col.prop(context.object, "float_Timerright_off")
            col.prop(context.object, "float_Timerright_on")
        if context.object.data.name == "EvilSwitchNumber":
            col.prop(context.object, "integer_EventON")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_ModelType")
            col.prop(context.object, "float_OffTimer")
            col.prop(context.object, "id_list_TargetListON")
            col.prop(context.object, "float_TimerON")
            col.prop(context.object, "integer_Type")
        if context.object.data.name == "EvilRotationSaw":
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_ModelType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "EvilTrickStone_Blue":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilTrickSwitch_Yellow":
            col.prop(context.object, "integer_EventOFF")
            col.prop(context.object, "integer_EventON")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "id_list_TargetListOFF")
            col.prop(context.object, "id_list_TargetListON")
            col.prop(context.object, "float_TimerOFF")
            col.prop(context.object, "float_TimerON")
        if context.object.data.name == "EvilCrank":
            col.prop(context.object, "float_DefaultValue")
            col.prop(context.object, "integer_EventOFF")
            col.prop(context.object, "integer_EventON")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_LimitAngle")
            col.prop(context.object, "float_RotationSpeed")
            col.prop(context.object, "float_StopTime")
            col.prop(context.object, "id_list_TargetListOFF")
            col.prop(context.object, "id_list_TargetListON")
            col.prop(context.object, "float_TimerOFF")
            col.prop(context.object, "float_TimerON")
        if context.object.data.name == "EvilElectricLaserCommon":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_OffTime")
            col.prop(context.object, "float_OnTime")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
        if context.object.data.name == "Evil_DummyBox":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Direction")
            col.prop(context.object, "float_Distance")
            col.prop(context.object, "float_Layer")
            col.prop(context.object, "float_Time")
        if context.object.data.name == "EvilItem":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_ItemType")
        if context.object.data.name == "EvilTimberBridge":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_MaxHp")
        if context.object.data.name == "EvilTrickStone_Red":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "PushBox":
            col.prop(context.object, "bool_Bar1_Enable")
            col.prop(context.object, "bool_Bar2_Enable")
            col.prop(context.object, "bool_Bar3_Enable")
            col.prop(context.object, "bool_Bar4_Enable")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Height")
            col.prop(context.object, "float_Weight")
            col.prop(context.object, "float_Layer")
            col.prop(context.object, "float_Radius")
        if context.object.data.name == "EvilElectricBar":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "bool_IsUseMessageElectric")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OffTime")
            col.prop(context.object, "float_OnTime")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "EvilWallSwitch":
            col.prop(context.object, "integer_EventOFF")
            col.prop(context.object, "integer_EventON")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_OffTimer")
            col.prop(context.object, "id_list_TargetListOFF")
            col.prop(context.object, "id_list_TargetListON")
            col.prop(context.object, "float_TimerOFF")
            col.prop(context.object, "float_TimerON")
            col.prop(context.object, "integer_Type")
        if context.object.data.name == "WoodBoxBomb":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsRestore")
            col.prop(context.object, "integer_ModelIndex")
            col.prop(context.object, "float_TimeLimit")
        if context.object.data.name == "EvilElectricColumn":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "bool_IsUseMessageElectric")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OffTime")
            col.prop(context.object, "float_OnTime")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "bool_Rotation90Snap")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
            col.prop(context.object, "float_YRotation")
        if context.object.data.name == "ItemBoxEvil":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "MovingThornBall":
            col.prop(context.object, "float_Direction")
            col.prop(context.object, "float_Distance")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_Time")
            col.prop(context.object, "float_Layer")
        if context.object.data.name == "Bar":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_Direction")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_StopTime")
            col.prop(context.object, "float_Layer")
        if context.object.data.name == "EvilElectricLaser":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_OffTime")
            col.prop(context.object, "float_OnTime")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
        if context.object.data.name == "EvilSeal":
            col.prop(context.object, "float_CollisionHeight")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDefaultOn")
            col.prop(context.object, "float_Width")
        if context.object.data.name == "EvilFlameNozzle":
            col.prop(context.object, "float_AttackInterval")
            col.prop(context.object, "float_AttackTime")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Intencity")
            col.prop(context.object, "float_IntencityEvil")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_ShockTimeEvil")
            col.prop(context.object, "float_StartTime")
            col.prop(context.object, "float_Type")
        if context.object.data.name == "Evil_IronWoodBox":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilTrickStone_Yellow":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilTrickSwitch_Green":
            col.prop(context.object, "integer_EventOFF")
            col.prop(context.object, "integer_EventON")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "id_list_TargetListOFF")
            col.prop(context.object, "id_list_TargetListON")
            col.prop(context.object, "float_TimerOFF")
            col.prop(context.object, "float_TimerON")
        if context.object.data.name == "EvilElectricWall":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_OffTime")
            col.prop(context.object, "float_OnTime")
            col.prop(context.object, "float_WallLength")
        if context.object.data.name == "Boss_DarkGaia":
            col.prop(context.object, "float_Course")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "Boss_FinalDarkGaia_Tentacle":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "Boss_FinalRobo":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "Boss_FinalDarkGaia_Barrier":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "Boss_Hydra":
            col.prop(context.object, "float_ActiveRange")
            col.prop(context.object, "float_CollisionRange")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_LifeTime")
            col.prop(context.object, "integer_SizeType")
            col.prop(context.object, "float_Speed")
            col.prop(context.object, "integer_TaregetType")
            col.prop(context.object, "float_TargetPos_Sync")
            col.prop(context.object, "float_TargetPosition_X")
            col.prop(context.object, "float_TargetPosition_Y")
            col.prop(context.object, "float_TargetPosition_Z")
        if context.object.data.name == "Boss_FinalDarkGaia":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Robo_Start_Degree")
        if context.object.data.name == "Boss_DarkGaia_NextStage":
            col.prop(context.object, "float_Height")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_Width")
        if context.object.data.name == "Boss_FinalDarkGaia_FloatRock":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_RebornTime")
            col.prop(context.object, "float_RockSize")
            col.prop(context.object, "float_Scale")
            col.prop(context.object, "float_TentacleNum")
            col.prop(context.object, "float_Type")
        if context.object.data.name == "SpaceHurrier":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_m_BoostSpeed")
            col.prop(context.object, "float_m_DebugCylinderHeight")
            col.prop(context.object, "bool_m_IsFirstHurrier")
            col.prop(context.object, "float_m_NormalSpeed")
            col.prop(context.object, "float_m_Range")
        if context.object.data.name == "Boss_Hydra_Generator":
            col.prop(context.object, "float_CollisionRange")
            col.prop(context.object, "float_GenerateNum")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_LifeTime")
            col.prop(context.object, "float_Radius")
            col.prop(context.object, "float_RestartTime")
            col.prop(context.object, "float_SizeType")
            col.prop(context.object, "float_Speed")
        if context.object.data.name == "EvilThornColumn_MykonosAa":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsGearColumn")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "bool_Rotation90Snap")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
            col.prop(context.object, "float_ThornAmplitude")
            col.prop(context.object, "float_ThornBaseOffset")
            col.prop(context.object, "float_ThornCycle")
            col.prop(context.object, "float_ThornModelType")
            col.prop(context.object, "float_ThornMoveType")
            col.prop(context.object, "float_ThornNumBtm")
            col.prop(context.object, "float_ThornNumTop")
            col.prop(context.object, "float_ThornPhase")
            col.prop(context.object, "float_ThornSpace")
            col.prop(context.object, "float_ThornStopTime")
            col.prop(context.object, "float_YRotation")
        if context.object.data.name == "EvilBar_MykonosAa":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "Evil_MykonosWoodBox":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilSwitchDoor_MykonosA":
            col.prop(context.object, "float_FirstState")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilRevolveBar_Mykonos":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsPause")
            col.prop(context.object, "float_OffTime")
            col.prop(context.object, "float_OnTime")
            col.prop(context.object, "float_Phase")
        if context.object.data.name == "EvilLiftDoor_MykonosSub":
            col.prop(context.object, "float_Friction")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Kasoku")
        if context.object.data.name == "EvilHandle_MykonosAa":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "EvilColumn_MykonosAa":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "bool_Rotation90Snap")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
            col.prop(context.object, "float_YRotation")
        if context.object.data.name == "EvilLiftDoor_MykonosA":
            col.prop(context.object, "float_Friction")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Kasoku")
        if context.object.data.name == "EvilFloor_Mykonos":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_ResetTime")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "EvilMykonosBreakDoor":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_NoBreak")
        if context.object.data.name == "eAirChaser":
            col.prop(context.object, "integer_AirChaser_01")
            col.prop(context.object, "integer_AirChaser_02")
            col.prop(context.object, "integer_AirChaser_03")
            col.prop(context.object, "float_AppearOffset")
            col.prop(context.object, "float_AppearVelocityL")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_HeightFromPath")
            col.prop(context.object, "bool_IsEndAnnihilation")
            col.prop(context.object, "bool_IsUseCameraAppear")
            col.prop(context.object, "bool_IsUseCameraChaser")
            col.prop(context.object, "float_LaserChargeTime")
            col.prop(context.object, "float_MaxVelocity")
            col.prop(context.object, "float_MinVelocity")
            col.prop(context.object, "integer_NumEnemy")
            col.prop(context.object, "bool_SnapOnPath")
            col.prop(context.object, "float_WavingVelocity")
        if context.object.data.name == "eBigChaser":
            col.prop(context.object, "float_AppearSpeed")
            col.prop(context.object, "integer_AppearType")
            col.prop(context.object, "float_AttackRatioLaser")
            col.prop(context.object, "float_AttackRatioShockwave")
            col.prop(context.object, "float_AttackTimeAdd")
            col.prop(context.object, "float_AttackTimeMultiply")
            col.prop(context.object, "float_CameraAppearLengthToSonic")
            col.prop(context.object, "float_ChangeCameraEnterTime")
            col.prop(context.object, "float_ChangeCameraLeaveTime")
            col.prop(context.object, "float_ChaseDistance")
            col.prop(context.object, "float_ChaseSpeedScaleFasterThanSonic")
            col.prop(context.object, "float_ChaseSpeedScaleSlowerThanSonic")
            col.prop(context.object, "float_EnterBoostScale")
            col.prop(context.object, "float_FinishCameraKeepTime")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsVisibleDefault")
            col.prop(context.object, "float_LaserCount")
            col.prop(context.object, "float_LaserImpulseTangent")
            col.prop(context.object, "float_LaserImpulseY")
            col.prop(context.object, "float_LaserPreShotTime")
            col.prop(context.object, "float_LaserShiftScale")
            col.prop(context.object, "float_LaserSpeed")
            col.prop(context.object, "float_LaserTime")
            col.prop(context.object, "float_LeaveBoostScale")
            col.prop(context.object, "integer_LeaveType")
            col.prop(context.object, "float_LifePoint")
            col.prop(context.object, "float_MaximumSpeed")
            col.prop(context.object, "float_MinimumSpeed")
            col.prop(context.object, "float_PunchImpulseTangent")
            col.prop(context.object, "float_PunchImpulseY")
            col.prop(context.object, "float_ShockwaveImpulseTangent")
            col.prop(context.object, "float_ShockwaveImpulseY")
            col.prop(context.object, "float_ShockwaveSpeed")
            col.prop(context.object, "float_SonicAutoRunSpeed")
            col.prop(context.object, "float_WaitTimeAfterPunch")
        if context.object.data.name == "eAirCannonGold":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Interval")
            col.prop(context.object, "float_LifeTime")
            col.prop(context.object, "integer_NumBullet")
            col.prop(context.object, "integer_NumShotOneTime")
            col.prop(context.object, "bool_OnlyPlayerAttack")
            col.prop(context.object, "bool_PlayAppearEffect")
            col.prop(context.object, "float_RadiusAction")
            col.prop(context.object, "float_RadiusSearch")
            col.prop(context.object, "integer_ShotType")
            col.prop(context.object, "integer_Type")
            col.prop(context.object, "float_ViewAngleTate")
            col.prop(context.object, "float_ViewAngleYoko")
        if context.object.data.name == "eAirCannonNormal":
            col.prop(context.object, "float_Interval")
            col.prop(context.object, "integer_MoveType")
            col.prop(context.object, "integer_NumBullet")
            col.prop(context.object, "integer_NumShotOneTime")
            col.prop(context.object, "bool_OnlyPlayerAttack")
            col.prop(context.object, "bool_PlayAppearEffect")
            col.prop(context.object, "float_RadiusAction")
            col.prop(context.object, "float_RadiusSearch")
            col.prop(context.object, "integer_ShotType")
            col.prop(context.object, "integer_Type")
            col.prop(context.object, "float_ViewAngleTate")
            col.prop(context.object, "float_ViewAngleYoko")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsCastShadow")
        if context.object.data.name == "eFighterGun":
            col.prop(context.object, "float_AttackInterval")
            col.prop(context.object, "float_AttackTime")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsUseFootIK")
            col.prop(context.object, "bool_MoveTypeSideView")
            col.prop(context.object, "bool_OnlyPlayerAttack")
            col.prop(context.object, "bool_PlayAppearEffect")
            col.prop(context.object, "float_RadiusActive")
            col.prop(context.object, "float_RadiusAttack")
            col.prop(context.object, "integer_ShotType")
            col.prop(context.object, "integer_Type")
            col.prop(context.object, "bool_UseChibi")
        if context.object.data.name == "eTyphoon":
            col.prop(context.object, "float_AttackInterval")
            col.prop(context.object, "float_AttackTime")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_MoveType")
            col.prop(context.object, "bool_OnlyPlayerAttack")
            col.prop(context.object, "bool_PlayAppearEffect")
            col.prop(context.object, "float_StartTime")
        if context.object.data.name == "eAirChaserReloadChaserCollision":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Length")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "integer_DefaultStatus")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_NumCurrent")
            col.prop(context.object, "integer_NumTarget")
            col.prop(context.object, "integer_Shape_Type")
        if context.object.data.name == "eFighter":
            col.prop(context.object, "bool_IsUseFootIK")
            col.prop(context.object, "bool_MoveTypeSideView")
            col.prop(context.object, "bool_OnlyPlayerAttack")
            col.prop(context.object, "bool_PlayAppearEffect")
            col.prop(context.object, "float_RadiusActive")
            col.prop(context.object, "float_RadiusAttack")
            col.prop(context.object, "integer_Type")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsCastShadow")
        if context.object.data.name == "eFlame":
            col.prop(context.object, "float_AttackInterval")
            col.prop(context.object, "float_AttackTime")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_MoveType")
            col.prop(context.object, "bool_OnlyPlayerAttack")
            col.prop(context.object, "bool_PlayAppearEffect")
            col.prop(context.object, "float_StartTime")
        if context.object.data.name == "eAirChaserCollisinForceAttack":
            col.prop(context.object, "integer_AttackType")
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Length")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "integer_DefaultStatus")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_Shape_Type")
        if context.object.data.name == "eMoleCannon":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IntervalAttack")
            col.prop(context.object, "float_IntervalShot")
            col.prop(context.object, "integer_NumAttackOneTime")
            col.prop(context.object, "integer_NumShotOneTime")
            col.prop(context.object, "float_RadiusAppear")
            col.prop(context.object, "float_RadiusEscape")
            col.prop(context.object, "integer_ShotType")
            col.prop(context.object, "integer_Type")
            col.prop(context.object, "bool_OnlyPlayerAttack")
            col.prop(context.object, "bool_PlayAppearEffect")
        if context.object.data.name == "eFighterMissile":
            col.prop(context.object, "integer_ActionType")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_ModelType")
            col.prop(context.object, "bool_OnlyPlayerAttack")
            col.prop(context.object, "bool_PlayAppearEffect")
            col.prop(context.object, "float_RadiusAttackFar")
            col.prop(context.object, "float_RadiusAttackNear")
            col.prop(context.object, "float_RadiusSearch")
            col.prop(context.object, "float_ShotIntervel")
            col.prop(context.object, "integer_ShotTypeBackPack")
            col.prop(context.object, "integer_ShotTypeHorizon")
            col.prop(context.object, "float_UserRange")
        if context.object.data.name == "eSpinner":
            col.prop(context.object, "vector_AlivePoint")
            col.prop(context.object, "bool_ForSideView")
            col.prop(context.object, "bool_OnlyPlayerAttack")
            col.prop(context.object, "bool_PlayAppearEffect")
            col.prop(context.object, "integer_Type")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsCastShadow")
        if context.object.data.name == "eShackleSView":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_IntervalDecRing")
            col.prop(context.object, "bool_OnlyPlayerAttack")
            col.prop(context.object, "bool_PlayAppearEffect")
            col.prop(context.object, "float_RadiusActive")
            col.prop(context.object, "float_RadiusAttack")
        if context.object.data.name == "eThunderBall":
            col.prop(context.object, "float_AttackInterval")
            col.prop(context.object, "float_AttackTime")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_MoveTypeSideView")
            col.prop(context.object, "bool_OnlyPlayerAttack")
            col.prop(context.object, "bool_PlayAppearEffect")
            col.prop(context.object, "float_StartTime")
            col.prop(context.object, "integer_Type")
        if context.object.data.name == "eFighterTutorial":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsUseFootIK")
            col.prop(context.object, "bool_MoveTypeSideView")
            col.prop(context.object, "bool_OnlyPlayerAttack")
            col.prop(context.object, "bool_PlayAppearEffect")
            col.prop(context.object, "float_RadiusActive")
            col.prop(context.object, "float_RadiusAttack")
            col.prop(context.object, "integer_Type")
        if context.object.data.name == "eSpanner":
            col.prop(context.object, "float_AttackInterval")
            col.prop(context.object, "float_AttackTime")
            col.prop(context.object, "bool_OnlyPlayerAttack")
            col.prop(context.object, "bool_PlayAppearEffect")
            col.prop(context.object, "float_StartTime")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsCastShadow")
        if context.object.data.name == "eFighterShield":
            col.prop(context.object, "float_AttackInterval")
            col.prop(context.object, "float_AttackTime")
            col.prop(context.object, "float_FirstSpeed")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsUseFootIK")
            col.prop(context.object, "bool_MoveTypeSideView")
            col.prop(context.object, "bool_OnlyPlayerAttack")
            col.prop(context.object, "bool_PlayAppearEffect")
            col.prop(context.object, "float_RadiusActive")
            col.prop(context.object, "float_RadiusAttack")
            col.prop(context.object, "integer_ShieldType")
            col.prop(context.object, "float_StartTime")
            col.prop(context.object, "integer_Type")
        if context.object.data.name == "eBurstSView":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_IntervalDecRing")
            col.prop(context.object, "bool_OnlyPlayerAttack")
            col.prop(context.object, "bool_PlayAppearEffect")
            col.prop(context.object, "float_RadiusActive")
            col.prop(context.object, "float_RadiusAttack")
            col.prop(context.object, "float_TimeBomb")
        if context.object.data.name == "eFighterSword":
            col.prop(context.object, "float_AttackInterval")
            col.prop(context.object, "float_AttackTime")
            col.prop(context.object, "float_FirstSpeed")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsUseFootIK")
            col.prop(context.object, "bool_MoveTypeSideView")
            col.prop(context.object, "bool_OnlyPlayerAttack")
            col.prop(context.object, "bool_PlayAppearEffect")
            col.prop(context.object, "float_RadiusActive")
            col.prop(context.object, "float_RadiusAttack")
            col.prop(context.object, "integer_ShieldType")
            col.prop(context.object, "float_StartTime")
            col.prop(context.object, "integer_Type")
        if context.object.data.name == "eAirChaserPillar":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Length")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "integer_DefaultStatus")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_Shape_Type")
        if context.object.data.name == "eBurstFView":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_IntervalDecRing")
            col.prop(context.object, "bool_OnlyPlayerAttack")
            col.prop(context.object, "bool_PlayAppearEffect")
            col.prop(context.object, "float_RadiusActive")
            col.prop(context.object, "float_RadiusAttack")
            col.prop(context.object, "float_TimeBomb")
        if context.object.data.name == "eAirCannonGoldCreator":
            col.prop(context.object, "float_Collision_X")
            col.prop(context.object, "float_Collision_Y")
            col.prop(context.object, "float_Collision_Z")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Interval")
            col.prop(context.object, "float_LifeTime")
            col.prop(context.object, "integer_NumBullet")
            col.prop(context.object, "integer_NumShotOneTime")
            col.prop(context.object, "bool_OnlyPlayerAttack")
            col.prop(context.object, "bool_PlayAppearEffect")
            col.prop(context.object, "float_RadiusAction")
            col.prop(context.object, "float_RadiusSearch")
            col.prop(context.object, "integer_ShotType")
            col.prop(context.object, "integer_Type")
            col.prop(context.object, "float_ViewAngleTate")
            col.prop(context.object, "float_ViewAngleYoko")
        if context.object.data.name == "eShackleFView":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_IntervalDecRing")
            col.prop(context.object, "bool_OnlyPlayerAttack")
            col.prop(context.object, "bool_PlayAppearEffect")
            col.prop(context.object, "float_RadiusActive")
            col.prop(context.object, "float_RadiusAttack")
        if context.object.data.name == "eBlizzard":
            col.prop(context.object, "float_AttackInterval")
            col.prop(context.object, "float_AttackTime")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_MoveType")
            col.prop(context.object, "bool_OnlyPlayerAttack")
            col.prop(context.object, "bool_PlayAppearEffect")
            col.prop(context.object, "float_StartTime")
        if context.object.data.name == "eAirChaserCollisinLaneShift":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Length")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "integer_DefaultStatus")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_Shape_Type")
        if context.object.data.name == "PointMarker":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Height")
            col.prop(context.object, "float_Width")
            col.prop(context.object, "float_StageType")
        if context.object.data.name == "GoalRing":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsCastShadow")
            col.prop(context.object, "vector_ResultPosition")
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_BossKeyType")
            col.prop(context.object, "bool_IsMessageON")
        if context.object.data.name == "ItemVideoTape":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_MediaIndex")
        if context.object.data.name == "ItemRecordA":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_MediaIndex")
        if context.object.data.name == "ItemIllustBook":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_MediaIndex")
        if context.object.data.name == "SuperRing":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "Flame":
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_OffTime")
            col.prop(context.object, "float_OnTime")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_Type")
            col.prop(context.object, "float_Layer")
        if context.object.data.name == "StageEffect":
            col.prop(context.object, "float_ColorScale_A")
            col.prop(context.object, "float_ColorScale_B")
            col.prop(context.object, "float_ColorScale_G")
            col.prop(context.object, "float_ColorScale_R")
            col.prop(context.object, "bool_EditColorFlag")
            col.prop(context.object, "string_EffectType")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_Loop")
            col.prop(context.object, "float_ScaleX")
            col.prop(context.object, "float_ScaleY")
            col.prop(context.object, "float_ScaleZ")
            col.prop(context.object, "float_SphereRadius")
            col.prop(context.object, "float_UserRange")
            col.prop(context.object, "float_VolumeScale")
        if context.object.data.name == "SetRigidBody":
            col.prop(context.object, "bool_DefaultON")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Height")
            col.prop(context.object, "bool_IsCastShadow")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsPlayerTerrain")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_Range")
            col.prop(context.object, "float_Width")
            col.prop(context.object, "bool_m_IsSearchInsulateOnly")
            col.prop(context.object, "bool_IsPushBoxWall")
        if context.object.data.name == "Hint":
            col.prop(context.object, "integer_Category")
            col.prop(context.object, "float_ChangeTime")
            col.prop(context.object, "integer_CharaType")
            col.prop(context.object, "float_DrawCharWait")
            col.prop(context.object, "bool_DrawOnce")
            col.prop(context.object, "float_EndWait")
            col.prop(context.object, "bool_ExistPlatform")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_GroupID")
            col.prop(context.object, "bool_NeedInput")
            col.prop(context.object, "bool_PlayerStop")
            col.prop(context.object, "bool_UsePicture")
        if context.object.data.name == "IronBox":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "MedalMoon":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Index")
        if context.object.data.name == "WoodBox":
            col.prop(context.object, "float_Direction")
            col.prop(context.object, "float_Distance")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Time")
        if context.object.data.name == "ObjectPhysics":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsCastShadow")
            col.prop(context.object, "bool_IsDynamic")
            col.prop(context.object, "bool_IsReset")
            col.prop(context.object, "string_Type")
            col.prop(context.object, "float_ItemNum")
            col.prop(context.object, "float_ItemType")
        if context.object.data.name == "FallDeadCollision":
            col.prop(context.object, "float_RangeIn")
            col.prop(context.object, "float_RangeOut")
            col.prop(context.object, "uint16_Unknown1")
            col.prop(context.object, "float_Unknown3")
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "HintRing":
            col.prop(context.object, "integer_Category")
            col.prop(context.object, "integer_CharaType")
            col.prop(context.object, "integer_EventOff")
            col.prop(context.object, "integer_EventOff2")
            col.prop(context.object, "integer_EventOn")
            col.prop(context.object, "integer_EventOn2")
            col.prop(context.object, "bool_ExistPlatform")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_GroupID")
            col.prop(context.object, "bool_NeedInput")
            col.prop(context.object, "bool_PlayerStop")
            col.prop(context.object, "id_list_TargetListOff")
            col.prop(context.object, "id_list_TargetListOff2")
            col.prop(context.object, "id_list_TargetListOn")
            col.prop(context.object, "id_list_TargetListOn2")
            col.prop(context.object, "float_TimerOff")
            col.prop(context.object, "float_TimerOff2")
            col.prop(context.object, "float_TimerOn")
            col.prop(context.object, "float_TimerOn2")
            col.prop(context.object, "bool_UsePicture")
            col.prop(context.object, "bool_WaitEvent")
        if context.object.data.name == "Switch":
            col.prop(context.object, "integer_EventOFF")
            col.prop(context.object, "integer_EventON")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_OffTimer")
            col.prop(context.object, "id_list_TargetListOFF")
            col.prop(context.object, "id_list_TargetListON")
            col.prop(context.object, "float_TimerOFF")
            col.prop(context.object, "float_TimerON")
            col.prop(context.object, "integer_Type")
        if context.object.data.name == "MedalSun":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Index")
        if context.object.data.name == "Ring":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsCastShadow")
            col.prop(context.object, "bool_IsLightSpeedDashTarget")
            col.prop(context.object, "bool_IsReset")
            col.prop(context.object, "float_Range")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "EvilSwitchDoor_SnowA":
            col.prop(context.object, "float_FirstState")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilFloor_SnowA":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_ResetTime")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "EvilBreakableIcePillar":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_HP")
        if context.object.data.name == "EvilDialFloor_Snow":
            col.prop(context.object, "bool_CanPushBox")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_MoveLimit")
        if context.object.data.name == "EvilTorch":
            col.prop(context.object, "integer_EventOFF")
            col.prop(context.object, "integer_EventON")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_State")
            col.prop(context.object, "id_list_TargetListOFF")
            col.prop(context.object, "id_list_TargetListON")
            col.prop(context.object, "float_TimerOFF")
            col.prop(context.object, "float_TimerON")
        if context.object.data.name == "EvilIceIslandB":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilSinkIceBerg":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Time")
        if context.object.data.name == "EvilBreakableHandle_SnowAa":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_BreakTime")
            col.prop(context.object, "bool_CanBreak")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DefaultMode")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsShakeOnRelease")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_ResurgeTime")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
            col.prop(context.object, "float_Vitality")
        if context.object.data.name == "EvilRevolveBar_Snow":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsPause")
            col.prop(context.object, "float_OffTime")
            col.prop(context.object, "float_OnTime")
            col.prop(context.object, "float_Phase")
        if context.object.data.name == "EvilLiftDoor_SnowA":
            col.prop(context.object, "float_Friction")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Kasoku")
        if context.object.data.name == "EvilIceIslandA":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilFloor_SnowB":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_ResetTime")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "EvilHandle_SnowAa":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "EvilIcicle":
            col.prop(context.object, "float_BreakTime")
            col.prop(context.object, "float_BreakTime1")
            col.prop(context.object, "float_BreakTime2")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_Rotation90Snap")
        if context.object.data.name == "EvilDoor_SnowA_Freeze":
            col.prop(context.object, "float_FirstState")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilRevolveHandle_Snow":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsPause")
            col.prop(context.object, "float_OffTime")
            col.prop(context.object, "float_OnTime")
            col.prop(context.object, "float_Phase")
        if context.object.data.name == "EvilDoor_SnowA":
            col.prop(context.object, "float_FirstState")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilPushBox_Snow":
            col.prop(context.object, "bool_Bar1_Enable")
            col.prop(context.object, "bool_Bar2_Enable")
            col.prop(context.object, "bool_Bar3_Enable")
            col.prop(context.object, "bool_Bar4_Enable")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Weight")
        if context.object.data.name == "EvilBreakableColumn_SnowAa":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_BreakTime")
            col.prop(context.object, "bool_CanBreak")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DefaultMode")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsShakeOnRelease")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_ResurgeTime")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
            col.prop(context.object, "float_Vitality")
            col.prop(context.object, "float_YRotation")
        if context.object.data.name == "EvilIceIslandC":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilBar_SnowAa":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "PetraDust":
            col.prop(context.object, "float_ClearTime")
            col.prop(context.object, "float_ColliRangeBoxScalex")
            col.prop(context.object, "float_ColliRangeBoxScaley")
            col.prop(context.object, "float_ColliRangeBoxScalez")
            col.prop(context.object, "float_ColliRangeSphereRadius")
            col.prop(context.object, "float_Density")
            col.prop(context.object, "float_DensityTime")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDebugDraw")
            col.prop(context.object, "bool_IsUseBoxRange")
            col.prop(context.object, "float_LeaveTimeMax")
            col.prop(context.object, "float_MoveDirx")
            col.prop(context.object, "float_MoveDiry")
            col.prop(context.object, "float_MoveDirz")
            col.prop(context.object, "float_MoveSpeedMax")
            col.prop(context.object, "float_MoveSpeedMin")
            col.prop(context.object, "float_OffsetYMax")
            col.prop(context.object, "float_OffsetYMin")
            col.prop(context.object, "float_RangeBoxScalex")
            col.prop(context.object, "float_RangeBoxScaley")
            col.prop(context.object, "float_RangeBoxScalez")
            col.prop(context.object, "float_RangeSphereRadius")
            col.prop(context.object, "float_ScaleMax")
            col.prop(context.object, "float_ScaleMin")
        if context.object.data.name == "Miros":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Chicho":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "EfighterA":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Warrin":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Luimontn":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Keeo":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Raimond":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Chun":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "EfighterC":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Erio":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Kuwmi":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Makantnio":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Rin":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Nataria":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Shuifon":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Amy":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Quwod":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Rudi":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Ufid":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Yarisure":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Rania":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "EfighterB":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "HotdogMyk":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Utoba":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Kyoju":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Federica":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Ana":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Erin":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Yawa":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "HotdogNyc":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Defbig":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Fatima":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "HotdogEuc":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Fzul":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Rabib":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Aida":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Marketa":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Arex":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Icecream":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Dadid":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Rambrs":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Sdoky":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "HotdogPtr":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Nagi":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Dora":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Rutia":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Cofy":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "HotdogEgb":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Ipporita":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "CofyStore":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Sarianna":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Ara":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Zena":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Yaripeka":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Guwek":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Jamal":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Eric":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Assist":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "HotdogChn":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Ifsan":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Balbara":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Anastsia":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Zonshen":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Shady":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Boss":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Sunafkin":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Thianchai":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Safa":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Riz":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Esee":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Brenda":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Riry":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Urusure":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Ratif":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "HotdogSea":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Mauro":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Josef":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Dnyz":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Gregrus":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Jinrin":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Ilma":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Erhan":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Yasmin":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Msaid":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Tails":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Otto":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Franko":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Sandra":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Said":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Yaya":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Dina":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Charz":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Jiji":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Lilanne":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "HotdogSnw":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Wan":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "HotdogAfr":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Raira":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Rbart":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Imarn":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "Rouks":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_PositionID")
        if context.object.data.name == "EvilBreakableBar_EUAa":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_BreakTime")
            col.prop(context.object, "bool_CanBreak")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DefaultMode")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsShakeOnRelease")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_ResurgeTime")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
            col.prop(context.object, "float_Vitality")
        if context.object.data.name == "EvilHandle_EUAa":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "EvilClockHand":
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilRotationGearB":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_RotationDirection")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
        if context.object.data.name == "EvilMovingWall_EU":
            col.prop(context.object, "float_FirstState")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilEU_IronGate":
            col.prop(context.object, "integer_FirstState")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilElevator":
            col.prop(context.object, "integer_EventDown_1F")
            col.prop(context.object, "integer_EventUp_2F")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_Start2F")
            col.prop(context.object, "id_list_TargetListDown_1F")
            col.prop(context.object, "id_list_TargetListUp_2F")
            col.prop(context.object, "float_TimerDown_1F")
            col.prop(context.object, "float_TimerUp_2F")
        if context.object.data.name == "EvilSwitchDoor_EU":
            col.prop(context.object, "float_FirstState")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilPushBox_EU":
            col.prop(context.object, "bool_Bar1_Enable")
            col.prop(context.object, "bool_Bar2_Enable")
            col.prop(context.object, "bool_Bar3_Enable")
            col.prop(context.object, "bool_Bar4_Enable")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Weight")
        if context.object.data.name == "EvilBar_EUAa":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "EvilBigBarrel":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_MaxSpeed")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "EvilFloor_EU5M":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_ResetTime")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "EvilColumn_EUAaClock":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "bool_Rotation90Snap")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
            col.prop(context.object, "float_YRotation")
        if context.object.data.name == "EvilLiftDoor_EUA":
            col.prop(context.object, "float_Friction")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Kasoku")
        if context.object.data.name == "EvilRevolveBar_EU":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsPause")
            col.prop(context.object, "float_OffTime")
            col.prop(context.object, "float_OnTime")
            col.prop(context.object, "float_Phase")
        if context.object.data.name == "EvilFloor_EU3M":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_ResetTime")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "EvilBreakDoor_EU":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_NoBreak")
        if context.object.data.name == "EvilRevolveHandle_EU":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsPause")
            col.prop(context.object, "float_OffTime")
            col.prop(context.object, "float_OnTime")
            col.prop(context.object, "float_Phase")
        if context.object.data.name == "EvilBreakDoor_EUB":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_NoBreak")
        if context.object.data.name == "EvilEU_IronFence":
            col.prop(context.object, "integer_FirstState")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilRotationGearA":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_RotationDirection")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
        if context.object.data.name == "EU_TownDoor":
            col.prop(context.object, "float_FirstState")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "PetraRockFloorC":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "PetraRuinFloorA":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "PetraTownFloorA":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "PetraRuinFloorB":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "PetraTownFloorB":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "PetraPressFloorB":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "PetraRockFloorB":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "PetraPressFloorC":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "PetraRockFloorA":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "IrremovableMobPetra":
            col.prop(context.object, "string_CharaType")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_Motion")
        if context.object.data.name == "PetraPressFloorA":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "Petra_FallingRock":
            col.prop(context.object, "float_DownAcc")
            col.prop(context.object, "float_DownSpeed")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_ShakeTime")
        if context.object.data.name == "IrremovableMobPetraAct":
            col.prop(context.object, "string_CharaType")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_Motion")
        if context.object.data.name == "Petra_FallingPillar":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Speed")
        if context.object.data.name == "EvilHandle_AfricaAb":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "EvilDialFloor_Africa":
            col.prop(context.object, "bool_CanPushBox")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_MoveLimit")
        if context.object.data.name == "EvilBreakableBar_AfricaAg":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_BreakTime")
            col.prop(context.object, "bool_CanBreak")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DefaultMode")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsShakeOnRelease")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_ResurgeTime")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
            col.prop(context.object, "float_Vitality")
        if context.object.data.name == "EvilSwitchDoor_Africa":
            col.prop(context.object, "float_FirstState")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilThornColumn_AfricaAa":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsGearColumn")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "bool_Rotation90Snap")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
            col.prop(context.object, "float_ThornAmplitude")
            col.prop(context.object, "float_ThornBaseOffset")
            col.prop(context.object, "float_ThornCycle")
            col.prop(context.object, "float_ThornModelType")
            col.prop(context.object, "float_ThornMoveType")
            col.prop(context.object, "float_ThornNumBtm")
            col.prop(context.object, "float_ThornNumTop")
            col.prop(context.object, "float_ThornPhase")
            col.prop(context.object, "float_ThornSpace")
            col.prop(context.object, "float_ThornStopTime")
            col.prop(context.object, "float_YRotation")
        if context.object.data.name == "EvilThornColumn_AfricaAc":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsGearColumn")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "bool_Rotation90Snap")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
            col.prop(context.object, "float_ThornAmplitude")
            col.prop(context.object, "float_ThornBaseOffset")
            col.prop(context.object, "float_ThornCycle")
            col.prop(context.object, "float_ThornModelType")
            col.prop(context.object, "float_ThornMoveType")
            col.prop(context.object, "float_ThornNumBtm")
            col.prop(context.object, "float_ThornNumTop")
            col.prop(context.object, "float_ThornPhase")
            col.prop(context.object, "float_ThornSpace")
            col.prop(context.object, "float_ThornStopTime")
            col.prop(context.object, "float_YRotation")
        if context.object.data.name == "EvilLiftDoor_Africa":
            col.prop(context.object, "float_Friction")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Kasoku")
        if context.object.data.name == "EvilLiftDoor_AfricaB":
            col.prop(context.object, "float_Friction")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Kasoku")
        if context.object.data.name == "EvilHandle_AfricaAg":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "EvilBar_AfricaAg":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "EvilColumn_AfricaAc":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "bool_Rotation90Snap")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
            col.prop(context.object, "float_YRotation")
        if context.object.data.name == "EvilBreakableHandle_AfricaAb":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_BreakTime")
            col.prop(context.object, "bool_CanBreak")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DefaultMode")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsShakeOnRelease")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_ResurgeTime")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
            col.prop(context.object, "float_Vitality")
        if context.object.data.name == "Evil_AfricaWoodBox":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilHandle_AfricaAa":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "EvilBreakableHandle_AfricaAa":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_BreakTime")
            col.prop(context.object, "bool_CanBreak")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DefaultMode")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsShakeOnRelease")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_ResurgeTime")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
            col.prop(context.object, "float_Vitality")
        if context.object.data.name == "EvilRevolveHandle_Africa_Djenne":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsPause")
            col.prop(context.object, "float_OffTime")
            col.prop(context.object, "float_OnTime")
            col.prop(context.object, "float_Phase")
        if context.object.data.name == "EvilFloor_AfricaB":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_ResetTime")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "EvilFloor_AfricaC":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_ResetTime")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "EvilBar_AfricaAf":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "EvilPushBox_Africa":
            col.prop(context.object, "bool_Bar1_Enable")
            col.prop(context.object, "bool_Bar2_Enable")
            col.prop(context.object, "bool_Bar3_Enable")
            col.prop(context.object, "bool_Bar4_Enable")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Weight")
        if context.object.data.name == "EvilFloor_AfricaA":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_ResetTime")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "EvilRevolveBar_Africa_Djenne":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsPause")
            col.prop(context.object, "float_OffTime")
            col.prop(context.object, "float_OnTime")
            col.prop(context.object, "float_Phase")
        if context.object.data.name == "MediaRoom_TelevisionPetra":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "MediaRoom_Bookshelf":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "MediaRoom_Audio":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "MediaRoom_Gramophone":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "MediaRoom_TelevisionEU":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilLiftDoor_PetraB":
            col.prop(context.object, "float_Friction")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Kasoku")
        if context.object.data.name == "EvilFloor_Petora3M":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_ResetTime")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "EvilColumn_PetraAaTown":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "bool_Rotation90Snap")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
            col.prop(context.object, "float_YRotation")
        if context.object.data.name == "EvilLiftDoor_PetraA":
            col.prop(context.object, "float_Friction")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Kasoku")
        if context.object.data.name == "EvilPetra_MotionDoor":
            col.prop(context.object, "float_FirstState")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilBreakableColumn_PetraBRock":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_BreakTime")
            col.prop(context.object, "bool_CanBreak")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DefaultMode")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsShakeOnRelease")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_ResurgeTime")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
            col.prop(context.object, "float_Vitality")
            col.prop(context.object, "float_YRotation")
        if context.object.data.name == "EvilThornColumn_PetraAaTown":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsGearColumn")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "bool_Rotation90Snap")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
            col.prop(context.object, "float_ThornAmplitude")
            col.prop(context.object, "float_ThornBaseOffset")
            col.prop(context.object, "float_ThornCycle")
            col.prop(context.object, "float_ThornModelType")
            col.prop(context.object, "float_ThornMoveType")
            col.prop(context.object, "float_ThornNumBtm")
            col.prop(context.object, "float_ThornNumTop")
            col.prop(context.object, "float_ThornPhase")
            col.prop(context.object, "float_ThornSpace")
            col.prop(context.object, "float_ThornStopTime")
            col.prop(context.object, "float_YRotation")
        if context.object.data.name == "EvilPushBox_Petra":
            col.prop(context.object, "bool_Bar1_Enable")
            col.prop(context.object, "bool_Bar2_Enable")
            col.prop(context.object, "bool_Bar3_Enable")
            col.prop(context.object, "bool_Bar4_Enable")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Weight")
        if context.object.data.name == "EvilHandle_PetraAaTown":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "EvilFloor_Petora5M":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_ResetTime")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "EvilBreakableHandle_PetraAa":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_BreakTime")
            col.prop(context.object, "bool_CanBreak")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DefaultMode")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsShakeOnRelease")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_ResurgeTime")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
            col.prop(context.object, "float_Vitality")
        if context.object.data.name == "EvilRevolveHandle_Petra":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsPause")
            col.prop(context.object, "float_OffTime")
            col.prop(context.object, "float_OnTime")
            col.prop(context.object, "float_Phase")
        if context.object.data.name == "EvilBar_PetraAaTown":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "EvilColumn_BeachAa":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "bool_Rotation90Snap")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
            col.prop(context.object, "float_YRotation")
        if context.object.data.name == "EvilWaterSurface":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilFloatIsland":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilAppearFloatIsland":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_StabilityTime")
        if context.object.data.name == "EvilPachinkoBeach":
            col.prop(context.object, "bool_Back")
            col.prop(context.object, "float_Friction")
            col.prop(context.object, "bool_Front")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Kasoku")
            col.prop(context.object, "bool_Left")
            col.prop(context.object, "bool_Right")
        if context.object.data.name == "EvilBreakDoor_BeachRuinsWall":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_NoBreak")
        if context.object.data.name == "EvilPushBox_Beach":
            col.prop(context.object, "bool_Bar1_Enable")
            col.prop(context.object, "bool_Bar2_Enable")
            col.prop(context.object, "bool_Bar3_Enable")
            col.prop(context.object, "bool_Bar4_Enable")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Weight")
        if context.object.data.name == "EvilThornColumn_BeachAa":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsGearColumn")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "bool_Rotation90Snap")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
            col.prop(context.object, "float_ThornAmplitude")
            col.prop(context.object, "float_ThornBaseOffset")
            col.prop(context.object, "float_ThornCycle")
            col.prop(context.object, "float_ThornModelType")
            col.prop(context.object, "float_ThornMoveType")
            col.prop(context.object, "float_ThornNumBtm")
            col.prop(context.object, "float_ThornNumTop")
            col.prop(context.object, "float_ThornPhase")
            col.prop(context.object, "float_ThornSpace")
            col.prop(context.object, "float_ThornStopTime")
            col.prop(context.object, "float_YRotation")
        if context.object.data.name == "EvilBreakableHandle_BeachAa":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_BreakTime")
            col.prop(context.object, "bool_CanBreak")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DefaultMode")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsShakeOnRelease")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_ResurgeTime")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
            col.prop(context.object, "float_Vitality")
        if context.object.data.name == "EvilFloor_BeachA":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_ResetTime")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "Beach_MotionDoorIn":
            col.prop(context.object, "float_FirstState")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilBreakDoor_Beach":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_NoBreak")
        if context.object.data.name == "EvilBar_BeachA":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "EvilWaterFall":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsPause")
            col.prop(context.object, "float_OffTime")
            col.prop(context.object, "float_OnTime")
            col.prop(context.object, "float_Phase")
        if context.object.data.name == "EvilBreakBridge":
            col.prop(context.object, "float_BreakTime")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilLiftDoor_BeachA":
            col.prop(context.object, "float_Friction")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Kasoku")
        if context.object.data.name == "EvilTimber":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_MaxHp")
        if context.object.data.name == "EvilRevolveHandle_Beach":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsPause")
            col.prop(context.object, "float_OffTime")
            col.prop(context.object, "float_OnTime")
            col.prop(context.object, "float_Phase")
        if context.object.data.name == "EvilBreakDoor_BeachRockWall":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_NoBreak")
        if context.object.data.name == "Evil_BeachWoodBox":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilRevolveBar_Beach":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsPause")
            col.prop(context.object, "float_OffTime")
            col.prop(context.object, "float_OnTime")
            col.prop(context.object, "float_Phase")
        if context.object.data.name == "EvilHandle_BeachA":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "EvilFloor_BeachB":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_ResetTime")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "EU_LaundryC":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EU_BreakManhole":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "Pigeon":
            col.prop(context.object, "float_FirstSpeed")
            col.prop(context.object, "float_FlyStartRange")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_MaxSpeed")
            col.prop(context.object, "float_Pitch")
            col.prop(context.object, "float_WalkingRadius")
        if context.object.data.name == "EU_Floor":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "EU_LaundryB":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EU_Fountain":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_OutOfControl")
            col.prop(context.object, "vector_ShotVelocity")
            col.prop(context.object, "float_Velocity")
        if context.object.data.name == "EU_IronGate":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "RollingBarrel":
            col.prop(context.object, "float_FirstVelocity")
            col.prop(context.object, "float_GenerationTime")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_MaxVelocity")
            col.prop(context.object, "float_RandomRange")
            col.prop(context.object, "float_ThornRatio")
            col.prop(context.object, "float_Width")
        if context.object.data.name == "BarrelDamageCollision":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_Collision_Length")
            col.prop(context.object, "integer_DefaultStatus")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_Shape_Type")
        if context.object.data.name == "IrremovableMobEU":
            col.prop(context.object, "string_CharaType")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_Motion")
        if context.object.data.name == "Balloon":
            col.prop(context.object, "integer_BalloonColor")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_ReviveTime")
            col.prop(context.object, "float_SpeedMax")
            col.prop(context.object, "float_SpeedMin")
            col.prop(context.object, "float_UpSpeed")
        if context.object.data.name == "EU_LaundryA":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "IrremovableMobNYAct":
            col.prop(context.object, "string_CharaType")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_Motion")
        if context.object.data.name == "NY_FloorD":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "NY_FloorC":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "NY_ThornFan":
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "float_Num")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_Radius")
        if context.object.data.name == "NY_FloorA":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "NY_FloorB":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "Boss_EggBeetle":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "Boss_EggLancer_CameraQTE":
            col.prop(context.object, "float_DstOffsetY")
            col.prop(context.object, "float_DstOffsetZ")
            col.prop(context.object, "float_Ease_Time_Enter")
            col.prop(context.object, "float_Ease_Time_Leave")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsCameraView")
            col.prop(context.object, "bool_IsCollision")
            col.prop(context.object, "float_SrcOffsetY")
            col.prop(context.object, "float_SrcOffsetZ")
        if context.object.data.name == "Boss_EggLancer":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "Boss_EggRayBird":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "Boss_EggLancer_WarpCollision":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Length")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_DefaultStatus")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Shape_Type")
        if context.object.data.name == "Boss_EggLancer_ChangeStateCollision":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Length")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_DefaultStatus")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Shape_Type")
            col.prop(context.object, "float_State_Caution")
            col.prop(context.object, "float_State_Danger")
            col.prop(context.object, "float_State_Normal")
        if context.object.data.name == "ChinaFloorA":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "ChinaFlagD":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsReverse")
        if context.object.data.name == "ChinaFlagA":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsReverse")
        if context.object.data.name == "ChinaRotationFloor":
            col.prop(context.object, "integer_FloorType")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsFusa")
            col.prop(context.object, "bool_IsWall")
            col.prop(context.object, "integer_Phase")
            col.prop(context.object, "integer_PoleType")
            col.prop(context.object, "float_Speed")
            col.prop(context.object, "float_UserRange")
        if context.object.data.name == "ChinaFloorD":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "ChinaDragonEntrance":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_MotionSpeed")
        if context.object.data.name == "ChinaFloorC":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "ChinaFloorB":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "China_ThornBar":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Offset")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_Speed")
        if context.object.data.name == "ChinaFlagC":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsReverse")
        if context.object.data.name == "ChinaFlagB":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsReverse")
        if context.object.data.name == "ChinaRocket":
            col.prop(context.object, "float_Acc")
            col.prop(context.object, "float_BreakTime")
            col.prop(context.object, "float_FirstSpeed")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_JumpTime")
            col.prop(context.object, "float_MaxSpeed")
            col.prop(context.object, "float_OutOfControl")
            col.prop(context.object, "float_Pitch")
            col.prop(context.object, "float_Yaw")
        if context.object.data.name == "mission_item_teabottle_g":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "mission_item_teabottle_c":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "mission_item_teabottle_b":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "mission_item_teabottle_d":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "mission_item_teabottle_a":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "mission_item_teabottle_e":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "mission_item_teabottle_f":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "mission_item_statue_maria":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "mission_item_medicinebottle":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "Chao":
            col.prop(context.object, "integer_ChaoType")
            col.prop(context.object, "bool_IsFlying")
        if context.object.data.name == "mission_item_crystal":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "MovableMobCheckPoint":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "ItemStomping":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "TownTarget":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_Target")
        if context.object.data.name == "ItemLightSpeedDash":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "ETFsign":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EntranceDoor":
            col.prop(context.object, "integer_AreaType")
            col.prop(context.object, "integer_DoorType")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_KeyType")
            col.prop(context.object, "integer_NeedMedalNum")
            col.prop(context.object, "string_StageType")
        if context.object.data.name == "TimeSwitch":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_SequenceID")
        if context.object.data.name == "ItemWallJump":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "ItemAirBoost":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "FixedFloor":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_ScaleX")
            col.prop(context.object, "float_ScaleY")
            col.prop(context.object, "float_ScaleZ")
            col.prop(context.object, "bool_IsIce")
        if context.object.data.name == "TimeExtend":
            col.prop(context.object, "float_ExtendTime")
        if context.object.data.name == "MediaRoom_Computer":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "CourseCounter":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Width")
        if context.object.data.name == "FallingFloor":
            col.prop(context.object, "float_FallTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsIce")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "float_ResetTime")
            col.prop(context.object, "float_ScaleX")
            col.prop(context.object, "float_ScaleY")
            col.prop(context.object, "float_ScaleZ")
        if context.object.data.name == "RingGenerator":
            col.prop(context.object, "integer_Count")
            col.prop(context.object, "float_Interval")
        if context.object.data.name == "CarGenerator":
            col.prop(context.object, "integer_ScheduleXMLFileIndex")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_CarSpeed")
            col.prop(context.object, "bool_PathReverse")
        if context.object.data.name == "Occluder":
            col.prop(context.object, "float_Width")
            col.prop(context.object, "float_Height")
            col.prop(context.object, "bool_IsDrawingSupportLine")
            col.prop(context.object, "integer_SupportLineScale")
            col.prop(context.object, "bool_IsDrawingBoudingSphere")
        if context.object.data.name == "MovingFloor":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_Direction")
            col.prop(context.object, "bool_EnableMoving")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsIce")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_ScaleX")
            col.prop(context.object, "float_ScaleY")
            col.prop(context.object, "float_ScaleZ")
            col.prop(context.object, "float_Layer")
        if context.object.data.name == "ConstantFrame":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Length")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_DefaultStatus")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Shape_Type")
            col.prop(context.object, "float_m_FPS")
        if context.object.data.name == "ChangeMode_3Dto2D":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsCastShadow")
            col.prop(context.object, "float_Range")
            col.prop(context.object, "vector_TargetDirection")
            col.prop(context.object, "bool_m_IsChangeCamera")
            col.prop(context.object, "bool_m_IsEnableFromBack")
            col.prop(context.object, "bool_m_IsEnableFromFront")
            col.prop(context.object, "bool_m_IsPadCorrect")
            col.prop(context.object, "float_m_PathEaseTime")
        if context.object.data.name == "JumpCollision":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_ImpulseSpeedOnBoost")
            col.prop(context.object, "float_ImpulseSpeedOnNormal")
            col.prop(context.object, "bool_IsStartVelocityConstant")
            col.prop(context.object, "float_OutOfControl")
            col.prop(context.object, "string_Pitch")
            col.prop(context.object, "float_SpeedMin")
            col.prop(context.object, "float_TerrainIgnoreTime")
            col.prop(context.object, "bool_m_IsGroundOnly")
        if context.object.data.name == "StageFinishAndMessage":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "ChangeDiveBegin":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_m_DebugCylinderHeight")
            col.prop(context.object, "float_m_Range")
        if context.object.data.name == "LayerChangeCollisionFlat":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsInitAll")
            col.prop(context.object, "string_ONLayerIndex")
            col.prop(context.object, "string_ONLayerIndex1")
            col.prop(context.object, "string_ONLayerIndex2")
            col.prop(context.object, "string_ONLayerIndex3")
            col.prop(context.object, "string_OffLayerIndex")
            col.prop(context.object, "string_OffLayerIndex1")
            col.prop(context.object, "string_OffLayerIndex2")
            col.prop(context.object, "string_OffLayerIndex3")
            col.prop(context.object, "bool_UseON")
            col.prop(context.object, "bool_UseON1")
            col.prop(context.object, "bool_UseON2")
            col.prop(context.object, "bool_UseON3")
            col.prop(context.object, "bool_UseOff")
            col.prop(context.object, "bool_UseOff1")
            col.prop(context.object, "bool_UseOff2")
            col.prop(context.object, "bool_UseOff3")
        if context.object.data.name == "ChangeMode_2DtoForward":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsCastShadow")
            col.prop(context.object, "float_Range")
            col.prop(context.object, "vector_TargetDirection")
            col.prop(context.object, "float_Template")
            col.prop(context.object, "float_m_CurveCorrectionForce")
            col.prop(context.object, "float_m_DashPathSideMoveRate")
            col.prop(context.object, "bool_m_IsChangeCamera")
            col.prop(context.object, "bool_m_IsEnableFromBack")
            col.prop(context.object, "bool_m_IsEnableFromFront")
            col.prop(context.object, "bool_m_IsLimitEdge")
            col.prop(context.object, "bool_m_IsReverseCameraEnable")
            col.prop(context.object, "float_m_PathCorrectionForce")
        if context.object.data.name == "WallWalkEnableCollision":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Length")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_DefaultStatus")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Shape_Type")
            col.prop(context.object, "bool_m_IsEnableWallWalk")
        if context.object.data.name == "GravityChangeCollision":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Length")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_DefaultStatus")
            col.prop(context.object, "float_EnteringLimitTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Shape_Type")
        if context.object.data.name == "StopPeopleObject":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsStopEnemy")
            col.prop(context.object, "bool_IsStopPlayer")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "ChangeDiveEnd":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_m_DebugCylinderHeight")
            col.prop(context.object, "float_m_Range")
        if context.object.data.name == "StumbleCollision":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Length")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_DefaultStatus")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsCastShadow")
            col.prop(context.object, "float_LaunchVelocity")
            col.prop(context.object, "float_NoControlTime")
            col.prop(context.object, "float_Range")
            col.prop(context.object, "float_Shape_Type")
        if context.object.data.name == "ChangeMode_3DtoForward":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsCastShadow")
            col.prop(context.object, "float_Range")
            col.prop(context.object, "vector_TargetDirection")
            col.prop(context.object, "float_Template")
            col.prop(context.object, "float_m_CurveCorrectionForce")
            col.prop(context.object, "float_m_DashPathSideMoveRate")
            col.prop(context.object, "bool_m_IsChangeCamera")
            col.prop(context.object, "bool_m_IsEnableFromBack")
            col.prop(context.object, "bool_m_IsEnableFromFront")
            col.prop(context.object, "bool_m_IsLimitEdge")
            col.prop(context.object, "bool_m_IsReverseCameraEnable")
            col.prop(context.object, "float_m_PathCorrectionForce")
        if context.object.data.name == "ChangeMode_3DtoDash":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsCastShadow")
            col.prop(context.object, "float_Range")
            col.prop(context.object, "vector_TargetDirection")
            col.prop(context.object, "float_Template")
            col.prop(context.object, "float_m_CurveCorrectionForce")
            col.prop(context.object, "bool_m_IsChangeCamera")
            col.prop(context.object, "bool_m_IsEnableFromBack")
            col.prop(context.object, "bool_m_IsEnableFromFront")
            col.prop(context.object, "bool_m_IsLimitEdge")
            col.prop(context.object, "bool_m_IsReverseCameraEnable")
            col.prop(context.object, "float_m_PathCorrectionForce")
        if context.object.data.name == "ChangeVelocity":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_m_IsRate")
            col.prop(context.object, "float_m_Speed")
            col.prop(context.object, "float_m_SpeedRate")
        if context.object.data.name == "AutorunStartCollision":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_EaseTime")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsForceToGround")
            col.prop(context.object, "float_KeepTime")
            col.prop(context.object, "float_Speed")
            col.prop(context.object, "float_ToPathEaseTime")
            col.prop(context.object, "float_Type")
        if context.object.data.name == "SpeedDownCollision":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Length")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_DefaultStatus")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Shape_Type")
            col.prop(context.object, "float_Speed")
            col.prop(context.object, "bool_m_IsSign")
            col.prop(context.object, "bool_m_IsRate")
            col.prop(context.object, "float_m_SpeedRate")
        if context.object.data.name == "LayerChange":
            col.prop(context.object, "float_ActivateCategory")
            col.prop(context.object, "float_ActivateIndex")
            col.prop(context.object, "float_DeactivateCategory")
            col.prop(context.object, "float_DeactivateIndex")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_ONLayerIndex")
            col.prop(context.object, "string_OffLayerIndex")
            col.prop(context.object, "bool_UseON")
            col.prop(context.object, "bool_UseOff")
        if context.object.data.name == "LayerChangeCollision":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Length")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_DefaultStatus")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsInitAll")
            col.prop(context.object, "string_ONLayerIndex")
            col.prop(context.object, "string_ONLayerIndex1")
            col.prop(context.object, "string_ONLayerIndex2")
            col.prop(context.object, "string_ONLayerIndex3")
            col.prop(context.object, "string_OffLayerIndex")
            col.prop(context.object, "string_OffLayerIndex1")
            col.prop(context.object, "string_OffLayerIndex2")
            col.prop(context.object, "string_OffLayerIndex3")
            col.prop(context.object, "float_Shape_Type")
            col.prop(context.object, "bool_UseON")
            col.prop(context.object, "bool_UseON1")
            col.prop(context.object, "bool_UseON2")
            col.prop(context.object, "bool_UseON3")
            col.prop(context.object, "bool_UseOff")
            col.prop(context.object, "bool_UseOff1")
            col.prop(context.object, "bool_UseOff2")
            col.prop(context.object, "bool_UseOff3")
            col.prop(context.object, "float_Layer")
        if context.object.data.name == "ChangeDiveEndNoEvent":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "AutorunFinishCollision":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsCastShadow")
            col.prop(context.object, "float_Range")
        if context.object.data.name == "SonicStopCollision":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Height")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_Width")
        if context.object.data.name == "ThornContainerSide":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "Paraloop":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Length")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_DefaultStatus")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Shape_Type")
            col.prop(context.object, "float_m_MaxLength")
        if context.object.data.name == "eBigChaserBomb":
            col.prop(context.object, "bool_IsBigChaserMode")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_ThresholdStumble")
        if context.object.data.name == "TrickJumper":
            col.prop(context.object, "float_FirstOutOfControl")
            col.prop(context.object, "float_FirstPitch")
            col.prop(context.object, "float_FirstSpeed")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsSideView")
            col.prop(context.object, "float_SecondOutOfControl")
            col.prop(context.object, "float_SecondPitch")
            col.prop(context.object, "float_SecondSpeed")
            col.prop(context.object, "float_TrickCount1")
            col.prop(context.object, "float_TrickCount2")
            col.prop(context.object, "float_TrickCount3")
            col.prop(context.object, "float_TrickTime1")
            col.prop(context.object, "float_TrickTime2")
            col.prop(context.object, "float_TrickTime3")
            col.prop(context.object, "float_m_Difficulty")
            col.prop(context.object, "float_m_Score")
        if context.object.data.name == "ThornBall":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsCastShadow")
            col.prop(context.object, "float_Range")
        if context.object.data.name == "MovingThorn":
            col.prop(context.object, "float_Direction")
            col.prop(context.object, "float_Distance")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_Time")
        if context.object.data.name == "GrindThorn":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsCastShadow")
            col.prop(context.object, "float_Range")
        if context.object.data.name == "ItemBox":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsCastShadow")
            col.prop(context.object, "float_Range")
        if context.object.data.name == "JumpPole":
            col.prop(context.object, "float_AddMaxVelocity")
            col.prop(context.object, "float_AddMinVelocity")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "IronThornContainerSide":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "RollingBall":
            col.prop(context.object, "float_BallNum")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_Radius")
            col.prop(context.object, "float_Layer")
        if context.object.data.name == "Hammer":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_ModelOffsetY")
            col.prop(context.object, "float_ModelOffsetZ")
            col.prop(context.object, "float_OffsetTime")
            col.prop(context.object, "float_RotateAngleWidth")
            col.prop(context.object, "float_Speed")
            col.prop(context.object, "float_Layer")
        if context.object.data.name == "SpringFake":
            col.prop(context.object, "float_DebugShotTimeLength")
            col.prop(context.object, "float_FirstSpeed")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsChangeCameraWhenPathChange")
            col.prop(context.object, "bool_IsPathChange")
            col.prop(context.object, "bool_IsStartVelocityConstant")
            col.prop(context.object, "bool_IsWallWalk")
            col.prop(context.object, "bool_IsYawUpdate")
            col.prop(context.object, "float_KeepVelocityDistance")
            col.prop(context.object, "float_OutOfControl")
            col.prop(context.object, "bool_m_IsConstantFrame")
            col.prop(context.object, "bool_m_IsConstantPosition")
            col.prop(context.object, "bool_m_IsMonkeyHunting")
            col.prop(context.object, "bool_m_IsStopBoost")
            col.prop(context.object, "bool_m_IsTo3D")
            col.prop(context.object, "vector_m_MonkeyTarget")
            col.prop(context.object, "bool_HasBase")
            col.prop(context.object, "bool_m_IsMonkeyHuntingLowAngle")
        if context.object.data.name == "AirSpring":
            col.prop(context.object, "float_DebugShotTimeLength")
            col.prop(context.object, "float_FirstSpeed")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsCastShadow")
            col.prop(context.object, "bool_IsChangeCameraWhenPathChange")
            col.prop(context.object, "bool_IsPathChange")
            col.prop(context.object, "bool_IsStartVelocityConstant")
            col.prop(context.object, "bool_IsWallWalk")
            col.prop(context.object, "bool_IsYawUpdate")
            col.prop(context.object, "float_KeepVelocityDistance")
            col.prop(context.object, "float_OutOfControl")
            col.prop(context.object, "bool_m_IsConstantFrame")
            col.prop(context.object, "bool_m_IsConstantPosition")
            col.prop(context.object, "bool_m_IsMonkeyHunting")
            col.prop(context.object, "bool_m_IsStopBoost")
            col.prop(context.object, "bool_m_IsTo3D")
            col.prop(context.object, "vector_m_MonkeyTarget")
            col.prop(context.object, "bool_HasBase")
            col.prop(context.object, "bool_m_IsMonkeyHuntingLowAngle")
        if context.object.data.name == "JumpBoard3D":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_ImpulseSpeedOnBoost")
            col.prop(context.object, "float_ImpulseSpeedOnNormal")
            col.prop(context.object, "float_OutOfControl")
            col.prop(context.object, "integer_SizeType")
        if context.object.data.name == "Spring":
            col.prop(context.object, "float_DebugShotTimeLength")
            col.prop(context.object, "float_FirstSpeed")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsChangeCameraWhenPathChange")
            col.prop(context.object, "bool_IsPathChange")
            col.prop(context.object, "bool_IsStartVelocityConstant")
            col.prop(context.object, "bool_IsWallWalk")
            col.prop(context.object, "bool_IsYawUpdate")
            col.prop(context.object, "float_KeepVelocityDistance")
            col.prop(context.object, "float_OutOfControl")
            col.prop(context.object, "float_Range")
            col.prop(context.object, "bool_m_IsConstantFrame")
            col.prop(context.object, "bool_m_IsConstantPosition")
            col.prop(context.object, "bool_m_IsMonkeyHunting")
            col.prop(context.object, "bool_m_IsStopBoost")
            col.prop(context.object, "bool_m_IsTo3D")
            col.prop(context.object, "vector_m_MonkeyTarget")
            col.prop(context.object, "bool_HasBase")
            col.prop(context.object, "bool_m_IsMonkeyHuntingLowAngle")
        if context.object.data.name == "JumpBoard":
            col.prop(context.object, "float_AngleType")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_ImpulseSpeedOnBoost")
            col.prop(context.object, "float_ImpulseSpeedOnNormal")
            col.prop(context.object, "float_OutOfControl")
            col.prop(context.object, "float_SizeType")
        if context.object.data.name == "RainbowRing":
            col.prop(context.object, "float_FirstSpeed")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_KeepVelocityDistance")
            col.prop(context.object, "float_OutOfControl")
        if context.object.data.name == "ThornSpring":
            col.prop(context.object, "float_DebugShotTimeLength")
            col.prop(context.object, "float_DownThornTime")
            col.prop(context.object, "float_FirstSpeed")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsChangeCameraWhenPathChange")
            col.prop(context.object, "bool_IsPathChange")
            col.prop(context.object, "bool_IsStartVelocityConstant")
            col.prop(context.object, "bool_IsWallWalk")
            col.prop(context.object, "bool_IsYawUpdate")
            col.prop(context.object, "float_KeepVelocityDistance")
            col.prop(context.object, "float_OutOfControl")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_UpThornTime")
        if context.object.data.name == "AppearThorn":
            col.prop(context.object, "float_Distance")
            col.prop(context.object, "integer_Direction")
            col.prop(context.object, "float_Time")
            col.prop(context.object, "integer_Phase")
        if context.object.data.name == "IronThornContainerUp":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Layer")
        if context.object.data.name == "PressThorn":
            col.prop(context.object, "float_BottomStopTime")
            col.prop(context.object, "float_DownTime")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsMessageOn")
            col.prop(context.object, "bool_IsMoveable")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_TopStoptime")
            col.prop(context.object, "float_UpDownWidth")
            col.prop(context.object, "float_UpTime")
            col.prop(context.object, "float_Layer")
            col.prop(context.object, "bool_IsTopThorn")
        if context.object.data.name == "DashRing":
            col.prop(context.object, "float_FirstSpeed")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsChangeCameraWhenChangePath")
            col.prop(context.object, "bool_IsChangePath")
            col.prop(context.object, "bool_IsHeadToVelocity")
            col.prop(context.object, "bool_IsTo3D")
            col.prop(context.object, "float_KeepVelocityDistance")
            col.prop(context.object, "float_OutOfControl")
        if context.object.data.name == "TriangleJumpCollision":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Length")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_DefaultStatus")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsTriangleJump")
            col.prop(context.object, "float_Shape_Type")
        if context.object.data.name == "ReactionPlate":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsChangeCameraWhenPathChange")
            col.prop(context.object, "bool_IsPathChange")
            col.prop(context.object, "float_MainAcceptingTime")
            col.prop(context.object, "float_PreAcceptingTime")
            col.prop(context.object, "integer_Type")
            col.prop(context.object, "integer_m_Difficulty")
            col.prop(context.object, "float_m_FailOutOfControlTime")
            col.prop(context.object, "float_m_JumpMaxVelocity")
            col.prop(context.object, "float_m_JumpMinVelocity")
            col.prop(context.object, "float_m_Score")
        if context.object.data.name == "TrickAttackPanel":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_m_FailLowAngle")
            col.prop(context.object, "float_m_FailOutOfControlTime")
            col.prop(context.object, "float_m_FailSpeed")
            col.prop(context.object, "float_m_SuccessSpeed")
            col.prop(context.object, "float_m_TrickCount")
            col.prop(context.object, "float_m_TrickTime")
        if context.object.data.name == "WideSpring":
            col.prop(context.object, "float_FirstSpeed")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsStartVelocityConstant")
            col.prop(context.object, "float_KeepVelocityDistance")
            col.prop(context.object, "float_OutOfControl")
            col.prop(context.object, "bool_IsStartPositionConstant")
        if context.object.data.name == "Pulley":
            col.prop(context.object, "float_AddUserRange")
            col.prop(context.object, "float_EndPosition")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsJumpCancel")
            col.prop(context.object, "bool_IsNoBug")
            col.prop(context.object, "float_PathID")
            col.prop(context.object, "float_StartPosition")
        if context.object.data.name == "UpReel":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_ImpulseVelocity")
            col.prop(context.object, "bool_IsWaitUp")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_OutOfControl")
            col.prop(context.object, "float_UpSpeedMax")
        if context.object.data.name == "GrindDashPanel":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsFront")
            col.prop(context.object, "bool_IsStartVelocityConstant")
            col.prop(context.object, "float_OutOfControl")
            col.prop(context.object, "float_Speed")
        if context.object.data.name == "DirectionalThorn":
            col.prop(context.object, "float_ForetasteTime")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsCastShadow")
            col.prop(context.object, "bool_IsUsePanel")
            col.prop(context.object, "float_MoveTime")
            col.prop(context.object, "float_OffTime")
            col.prop(context.object, "float_OnTime")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_Range")
            col.prop(context.object, "float_Type")
            col.prop(context.object, "bool_UseRigidBody")
            col.prop(context.object, "bool_UsePanel")
        if context.object.data.name == "DashPanel":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_OutOfControl")
            col.prop(context.object, "float_Speed")
            col.prop(context.object, "bool_IsStartVelocityConstant")
        if context.object.data.name == "ThornContainerUpSide":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "JumpSelector":
            col.prop(context.object, "float_DownShotForce")
            col.prop(context.object, "float_DownShotOutOfControl")
            col.prop(context.object, "float_FrontJumpForce")
            col.prop(context.object, "float_FrontJumpOutOfControl")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_InputTime")
            col.prop(context.object, "bool_IsDownShot")
            col.prop(context.object, "bool_IsPathChange")
            col.prop(context.object, "bool_IsQuestion")
            col.prop(context.object, "float_SuccessButton")
            col.prop(context.object, "float_UpJumpForce")
            col.prop(context.object, "float_UpJumpOutOfControl")
            col.prop(context.object, "float_UpJumpPitch")
        if context.object.data.name == "StompingSwitch":
            col.prop(context.object, "float_Event0")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "id_list_TargetList0")
            col.prop(context.object, "float_Timer0")
        if context.object.data.name == "ExStageEnemy":
            col.prop(context.object, "float_AddShotNum")
            col.prop(context.object, "float_AppearWaitTime")
            col.prop(context.object, "float_ButtonType")
            col.prop(context.object, "float_ChildNum")
            col.prop(context.object, "float_EnemyType")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_GroupQteNum")
            col.prop(context.object, "float_LeaveType")
            col.prop(context.object, "float_PathType")
            col.prop(context.object, "float_ShotTiming")
        if context.object.data.name == "ExStageParamChangeCol":
            col.prop(context.object, "float_BossDist")
            col.prop(context.object, "float_BossSpeed")
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Length")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_DefaultStatus")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_HatchState")
            col.prop(context.object, "bool_IsChangeBossParamDist")
            col.prop(context.object, "bool_IsChangeBossParamSpeed")
            col.prop(context.object, "bool_IsChangePlayerParamSpeed")
            col.prop(context.object, "float_PlayExSound")
            col.prop(context.object, "bool_PlaySmokeEffect")
            col.prop(context.object, "float_PlayerMotion")
            col.prop(context.object, "float_PlayerSpeed")
            col.prop(context.object, "float_Shape_Type")
        if context.object.data.name == "IrremovableMobBeach":
            col.prop(context.object, "string_CharaType")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_Motion")
        if context.object.data.name == "BeachClothA":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "BeachClothB":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "BeachClothD":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "BeachClothC":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "IrremovableMobMykonos":
            col.prop(context.object, "string_CharaType")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_Motion")
        if context.object.data.name == "Seagull":
            col.prop(context.object, "float_DecPosition")
            col.prop(context.object, "float_Distance")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_RollingSpeed")
            col.prop(context.object, "float_SpeedMax")
            col.prop(context.object, "float_SpeedMin")
        if context.object.data.name == "MykonosFloor":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "Pelican":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsRight")
        if context.object.data.name == "EvilChinaBreakDoor":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_NoBreak")
        if context.object.data.name == "EvilFloor_ChinaB":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_ResetTime")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "EvilSwitchDoor_ChinaA":
            col.prop(context.object, "float_FirstState")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilColumn_ChinaAa":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "integer_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "bool_Rotation90Snap")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
            col.prop(context.object, "float_YRotation")
        if context.object.data.name == "EvilRevolveBar_China":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsPause")
            col.prop(context.object, "float_OffTime")
            col.prop(context.object, "float_OnTime")
            col.prop(context.object, "float_Phase")
        if context.object.data.name == "EvilPachinkoChina":
            col.prop(context.object, "bool_Back")
            col.prop(context.object, "float_Friction")
            col.prop(context.object, "bool_Front")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Kasoku")
            col.prop(context.object, "bool_Left")
            col.prop(context.object, "bool_Right")
        if context.object.data.name == "EvilBar_ChinaAa":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "integer_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "EvilFloatIsland_China":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilHandle_ChinaAa":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "EvilChinaBreakDoorB":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_NoBreak")
        if context.object.data.name == "EvilFloor_ChinaA":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_ResetTime")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "EvilRevolveHandle_China":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsPause")
            col.prop(context.object, "float_OffTime")
            col.prop(context.object, "float_OnTime")
            col.prop(context.object, "float_Phase")
        if context.object.data.name == "EvilBreakableBar_ChinaAa":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_BreakTime")
            col.prop(context.object, "bool_CanBreak")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DefaultMode")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsShakeOnRelease")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "integer_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_ResurgeTime")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
            col.prop(context.object, "float_Vitality")
        if context.object.data.name == "EvilTripleDoor":
            col.prop(context.object, "float_DefaultOpenNum")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilBreakableHandle_ChinaAa":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_BreakTime")
            col.prop(context.object, "bool_CanBreak")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DefaultMode")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsShakeOnRelease")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "integer_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_ResurgeTime")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
            col.prop(context.object, "float_Vitality")
        if context.object.data.name == "Evil_ChinaBambooBox":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "BeachMoveFloorA":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "BeachFallFloor":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "Beach_Buoy":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_OutControl")
        if context.object.data.name == "Beach_FallPillar":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_DownSpeed0")
            col.prop(context.object, "float_DownSpeed1")
            col.prop(context.object, "float_DownSpeed2")
            col.prop(context.object, "float_DownSpeed3")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "Beach_ThornPillar":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_MoveLength")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Num")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_Speed")
        if context.object.data.name == "Beach_BreakBridge":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_ShakeTime")
        if context.object.data.name == "BeachFlagC":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "Beach_ThornBall":
            col.prop(context.object, "float_Distance")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_Time")
        if context.object.data.name == "BeachFloorA":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "Beach_PressThornHalf":
            col.prop(context.object, "float_BottomStopTime")
            col.prop(context.object, "float_DownTime")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsMessageOn")
            col.prop(context.object, "bool_IsMoveable")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_TopStoptime")
            col.prop(context.object, "float_UpDownWidth")
            col.prop(context.object, "float_UpTime")
        if context.object.data.name == "Beach_MotionDoor":
            col.prop(context.object, "float_FirstState")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "Beach_WaterColumn":
            col.prop(context.object, "float_DamageTime")
            col.prop(context.object, "float_Distance")
            col.prop(context.object, "float_EffectType")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Height")
            col.prop(context.object, "float_Radius")
        if context.object.data.name == "Beach_ThornBar":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_Speed")
        if context.object.data.name == "Beach_FlashFlood":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_HeraldTime")
            col.prop(context.object, "float_IdleTime")
            col.prop(context.object, "float_ModelType")
            col.prop(context.object, "float_ShotTime")
        if context.object.data.name == "Beach_Door":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "BeachFlagB":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "BeachFlagA":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "BeachFloorC":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "BeachMoveFloorB":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "BeachFloorB":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "Beach_UpFloor":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_StopTime")
            col.prop(context.object, "float_UpSpeed")
        if context.object.data.name == "Beach_Guillotine":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Phase")
        if context.object.data.name == "Beach_PressThorn":
            col.prop(context.object, "float_BottomStopTime")
            col.prop(context.object, "float_DownTime")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsMessageOn")
            col.prop(context.object, "bool_IsMoveable")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_TopStoptime")
            col.prop(context.object, "float_UpDownWidth")
            col.prop(context.object, "float_UpTime")
        if context.object.data.name == "BeachFlagD":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilBreakBorder_NewyorkA":
            col.prop(context.object, "float_FallTime")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilThornColumn_NewyorkAa":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsGearColumn")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "bool_Rotation90Snap")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
            col.prop(context.object, "float_ThornAmplitude")
            col.prop(context.object, "float_ThornBaseOffset")
            col.prop(context.object, "float_ThornCycle")
            col.prop(context.object, "float_ThornModelType")
            col.prop(context.object, "float_ThornMoveType")
            col.prop(context.object, "float_ThornNumBtm")
            col.prop(context.object, "float_ThornNumTop")
            col.prop(context.object, "float_ThornPhase")
            col.prop(context.object, "float_ThornSpace")
            col.prop(context.object, "float_ThornStopTime")
            col.prop(context.object, "float_YRotation")
        if context.object.data.name == "EvilFloor_NY_A":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_ResetTime")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "EvilHandle_NewYorkAa":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "EvilNewyorkAdvertizeD":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_MaxHp")
        if context.object.data.name == "EvilNewyorkAdvertizeB":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_MaxHp")
        if context.object.data.name == "EvilSwitchDoor_Newyork":
            col.prop(context.object, "float_FirstState")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilBreakDoor_Newyork":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_NoBreak")
        if context.object.data.name == "EvilFloor_NY_B":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_ResetTime")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "EvilElectricBalance_NewyorkA":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsPause")
            col.prop(context.object, "float_OffTime")
            col.prop(context.object, "float_OnTime")
            col.prop(context.object, "float_Phase")
        if context.object.data.name == "EvilFloor_NY_C":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_ResetTime")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "EvilBalanceBase":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilFloor_NY3M":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "integer_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_ResetTime")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "EvilDynamo":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_MaxHp")
            col.prop(context.object, "id_list_TargetList")
        if context.object.data.name == "EvilPushBox_NewYork":
            col.prop(context.object, "bool_Bar1_Enable")
            col.prop(context.object, "bool_Bar2_Enable")
            col.prop(context.object, "bool_Bar3_Enable")
            col.prop(context.object, "bool_Bar4_Enable")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Weight")
        if context.object.data.name == "EvilFallBalance_NewyorkC":
            col.prop(context.object, "float_FallTime")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilColumn_NewyorkAa":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "bool_Rotation90Snap")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
            col.prop(context.object, "float_YRotation")
        if context.object.data.name == "EvilNewyorkContainerA":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_MaxHp")
        if context.object.data.name == "EvilRevolveBar_Newyork":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsPause")
            col.prop(context.object, "float_OffTime")
            col.prop(context.object, "float_OnTime")
            col.prop(context.object, "float_Phase")
        if context.object.data.name == "EvilNewyorkAdvertizeC":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_MaxHp")
        if context.object.data.name == "EvilFloor_NY_D":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_ResetTime")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "EvilNewyorkAdvertizeA":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_MaxHp")
        if context.object.data.name == "EvilElectricBalance_NewyorkC":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsPause")
            col.prop(context.object, "float_OffTime")
            col.prop(context.object, "float_OnTime")
            col.prop(context.object, "float_Phase")
        if context.object.data.name == "EvilBalanceJoint":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilFloor_NY5M":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "integer_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_ResetTime")
            col.prop(context.object, "float_RotationPhase")
            col.prop(context.object, "float_RotationSpeed")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "EvilNewyorkAdvertizeE":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_MaxHp")
        if context.object.data.name == "EvilElectricBalance_NewyorkB":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsPause")
            col.prop(context.object, "float_OffTime")
            col.prop(context.object, "float_OnTime")
            col.prop(context.object, "float_Phase")
        if context.object.data.name == "EvilRevolveHandle_Newyork":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsPause")
            col.prop(context.object, "float_OffTime")
            col.prop(context.object, "float_OnTime")
            col.prop(context.object, "float_Phase")
        if context.object.data.name == "EvilFallBalance_NewyorkB":
            col.prop(context.object, "float_FallTime")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilBar_NewyorkAa":
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DialDirection")
            col.prop(context.object, "float_FitDirection")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IsAdvance")
            col.prop(context.object, "bool_IsFitPath")
            col.prop(context.object, "bool_IsUseMessage")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveDirection")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_SpeedOnPath")
            col.prop(context.object, "float_StopTime")
        if context.object.data.name == "Snow_ThornBall":
            col.prop(context.object, "float_Distance")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_MoveType")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_Time")
        if context.object.data.name == "Snow_Door":
            col.prop(context.object, "integer_FirstState")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "SnowFloorB2":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "Whale":
            col.prop(context.object, "float_AppearType")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_HeadUpAfterSonicJump")
            col.prop(context.object, "bool_IsEnterFromTail")
            col.prop(context.object, "float_JumpKeepVelocity")
            col.prop(context.object, "float_JumpOutOfControl")
            col.prop(context.object, "float_JumpPitch")
            col.prop(context.object, "float_JumpSpeed")
            col.prop(context.object, "float_JumpYaw")
            col.prop(context.object, "float_LeapDelay")
            col.prop(context.object, "float_LeapHeight")
            col.prop(context.object, "float_LeapSpeed")
            col.prop(context.object, "float_SwimUpDistance")
            col.prop(context.object, "float_ScaleType")
        if context.object.data.name == "SnowFloorB0":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "SnowFloorB6":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "SnowFloorB5":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "SnowFloorB4":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "Bobsleigh":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "SnowFloorB1":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "Icicle":
            col.prop(context.object, "float_FirstVelocity")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsWaterEffect")
            col.prop(context.object, "float_Timer")
        if context.object.data.name == "Snow_ThornBallAppear":
            col.prop(context.object, "float_Distance")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Time")
        if context.object.data.name == "Snow_ColdBreath":
            col.prop(context.object, "float_AttackInterval")
            col.prop(context.object, "float_AttackTime")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_StartTime")
        if context.object.data.name == "Snow_BreakFloor":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Timer")
        if context.object.data.name == "SnowFloorB7":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "SnowFloorA":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "Snow_IcePillar":
            col.prop(context.object, "float_AddUserRange")
            col.prop(context.object, "float_DownLength0")
            col.prop(context.object, "float_DownLength1")
            col.prop(context.object, "float_DownLength2")
            col.prop(context.object, "float_DownLength3")
            col.prop(context.object, "float_DownLength4")
            col.prop(context.object, "float_DownLength5")
            col.prop(context.object, "float_DownLength6")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_MotionSpeed")
        if context.object.data.name == "SnowFloorB3":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "Penguin":
            col.prop(context.object, "float_DivingDist")
            col.prop(context.object, "float_DivingSpeed")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_WalkDist")
            col.prop(context.object, "float_WalkSpeed")
            col.prop(context.object, "float_WalkingRadius")
        if context.object.data.name == "Snow_ColdAir":
            col.prop(context.object, "integer_FirstState")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_OffTime")
            col.prop(context.object, "float_OnTime")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "integer_Type")
        if context.object.data.name == "BobsleighEndCollision":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_JumpAngle")
            col.prop(context.object, "float_UncontrollableTime")
            col.prop(context.object, "float_Velocity")
            col.prop(context.object, "integer_LeaveType")
        if context.object.data.name == "IrremovableMobNY":
            col.prop(context.object, "string_CharaType")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "string_Motion")
        if context.object.data.name == "AfricaFloorA":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "DrumSpring":
            col.prop(context.object, "float_DebugShotTimeLength")
            col.prop(context.object, "float_FirstSpeed")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_HasBase")
            col.prop(context.object, "bool_IsChangeCameraWhenPathChange")
            col.prop(context.object, "bool_IsPathChange")
            col.prop(context.object, "bool_IsStartVelocityConstant")
            col.prop(context.object, "bool_IsWallWalk")
            col.prop(context.object, "bool_IsYawUpdate")
            col.prop(context.object, "float_KeepVelocityDistance")
            col.prop(context.object, "float_OutOfControl")
            col.prop(context.object, "bool_m_IsConstantFrame")
            col.prop(context.object, "bool_m_IsConstantPosition")
            col.prop(context.object, "bool_m_IsMonkeyHunting")
            col.prop(context.object, "bool_m_IsMonkeyHuntingLowAngle")
            col.prop(context.object, "bool_m_IsStopBoost")
            col.prop(context.object, "bool_m_IsTo3D")
            col.prop(context.object, "vector_m_MonkeyTarget")
        if context.object.data.name == "AfricaFloorB":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "AfricaFloorC":
            col.prop(context.object, "float_AddRange")
            col.prop(context.object, "float_Amplitude")
            col.prop(context.object, "float_AppearStopTime")
            col.prop(context.object, "float_AppearTime")
            col.prop(context.object, "float_Cycle")
            col.prop(context.object, "float_DisappearStopTime")
            col.prop(context.object, "float_DisappearTime")
            col.prop(context.object, "float_Gravity")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDamage")
            col.prop(context.object, "bool_IsEffect")
            col.prop(context.object, "bool_IsMessageON")
            col.prop(context.object, "bool_IsReverse")
            col.prop(context.object, "bool_IsWallJump")
            col.prop(context.object, "float_Length")
            col.prop(context.object, "float_MoveType")
            col.prop(context.object, "float_OnFloorTime")
            col.prop(context.object, "float_OnShakeTime")
            col.prop(context.object, "float_PathReverseTime")
            col.prop(context.object, "float_PathSpeed")
            col.prop(context.object, "float_Phase")
            col.prop(context.object, "float_PressDirection")
            col.prop(context.object, "float_ResetTime")
        if context.object.data.name == "HangPole":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_ShotVelFail")
            col.prop(context.object, "float_ShotVelSuccess")
        if context.object.data.name == "NavigationCollision":
            col.prop(context.object, "float_CancelAngle")
            col.prop(context.object, "integer_CollisionType")
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Length")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "integer_DefaultStatus")
            col.prop(context.object, "integer_DirectionType")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_InputAngle")
            col.prop(context.object, "integer_NavigationType")
            col.prop(context.object, "float_OffSpeed")
            col.prop(context.object, "float_OnSpeed")
            col.prop(context.object, "float_OutputTime")
            col.prop(context.object, "integer_QSType")
            col.prop(context.object, "vector_SlidingPosition")
        if context.object.data.name == "EvilNavigation":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Length")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "integer_DefaultStatus")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_KeyType")
            col.prop(context.object, "integer_NavigationType")
        if context.object.data.name == "ObjSoundLine":
            col.prop(context.object, "float_BaseVolume")
            col.prop(context.object, "string_CueName")
            col.prop(context.object, "string_FileName")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IntervalTime")
            col.prop(context.object, "bool_IsRegularly")
            col.prop(context.object, "float_Radius")
        if context.object.data.name == "ForceBgmStopCollision":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "ObjSoundPoint":
            col.prop(context.object, "float_BaseVolume")
            col.prop(context.object, "string_CueName")
            col.prop(context.object, "string_FileName")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_InsideRadius")
            col.prop(context.object, "float_IntervalTime")
            col.prop(context.object, "bool_IsRegularly")
            col.prop(context.object, "float_Radius")
        if context.object.data.name == "ObjSeCollisionWithEnemy":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Length")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "string_CueName")
            col.prop(context.object, "float_DefaultStatus")
            col.prop(context.object, "string_FileName")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Shape_Type")
        if context.object.data.name == "ObjAreaBossBGMCollision":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Length")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_DefaultStatus")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Shape_Type")
        if context.object.data.name == "ObjBaseSound":
            col.prop(context.object, "float_BaseVolume")
            col.prop(context.object, "string_CueName")
            col.prop(context.object, "string_FileName")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_IntervalTime")
            col.prop(context.object, "bool_IsRegularly")
        if context.object.data.name == "ObjBgmCollision":
            col.prop(context.object, "float_BgmVolume")
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Length")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_DefaultStatus")
            col.prop(context.object, "float_EnterChangeTime")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_LeaveChangeTime")
            col.prop(context.object, "float_Shape_Type")
        if context.object.data.name == "ObjSeCollision":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Length")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "string_CueName")
            col.prop(context.object, "float_DefaultStatus")
            col.prop(context.object, "string_FileName")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Shape_Type")
        if context.object.data.name == "ObjWindNoiseCollision":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "string_CueName")
            col.prop(context.object, "string_FileName")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_InsideRadius")
            col.prop(context.object, "float_Radius")
        if context.object.data.name == "EvilEnemyFloatNormal":
            col.prop(context.object, "vector_AlivePoint")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsRevival")
        if context.object.data.name == "EvilEnemyEggFighterL":
            col.prop(context.object, "integer_FirstState")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_PatrolType")
            col.prop(context.object, "integer_Personality")
            col.prop(context.object, "integer_StartWayPointID")
        if context.object.data.name == "EvilEnemyKillerBeeRed":
            col.prop(context.object, "integer_FirstState")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_PatrolType")
            col.prop(context.object, "integer_Personality")
            col.prop(context.object, "integer_StartWayPointID")
        if context.object.data.name == "EvilEnemyTitan":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_Personality")
        if context.object.data.name == "EvilEnemyRecklessL":
            col.prop(context.object, "integer_FirstState")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_Personality")
        if context.object.data.name == "EvilEnemyMasterCure":
            col.prop(context.object, "integer_FirstState")
            col.prop(context.object, "integer_PatrolType")
            col.prop(context.object, "integer_Personality")
            col.prop(context.object, "integer_StartWayPointID")
            col.prop(context.object, "id_list_TargetList")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilEnemyEggFighterK":
            col.prop(context.object, "integer_FirstState")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_PatrolType")
            col.prop(context.object, "integer_Personality")
            col.prop(context.object, "integer_StartWayPointID")
        if context.object.data.name == "EvilEnemyBigMother":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_Personality")
        if context.object.data.name == "EnemyObjEnemyHole":
            col.prop(context.object, "bool_EnableEffect")
            col.prop(context.object, "integer_EnemyType")
            col.prop(context.object, "integer_FirstState")
            col.prop(context.object, "integer_GenerateMaxCount")
            col.prop(context.object, "float_GenerateSeparateTime")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_Personality")
        if context.object.data.name == "EvilEnemyMasterSpooky":
            col.prop(context.object, "integer_FirstState")
            col.prop(context.object, "integer_PatrolType")
            col.prop(context.object, "integer_Personality")
            col.prop(context.object, "integer_StartWayPointID")
            col.prop(context.object, "id_list_TargetList")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilEnemyEggFighterW":
            col.prop(context.object, "integer_FirstState")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_PatrolType")
            col.prop(context.object, "integer_Personality")
            col.prop(context.object, "integer_StartWayPointID")
        if context.object.data.name == "EvilEnemyEggFighterG":
            col.prop(context.object, "integer_FirstState")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_PatrolType")
            col.prop(context.object, "integer_Personality")
            col.prop(context.object, "integer_StartWayPointID")
        if context.object.data.name == "EvilEnemyEggFighterS":
            col.prop(context.object, "integer_FirstState")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_PatrolType")
            col.prop(context.object, "integer_Personality")
            col.prop(context.object, "integer_StartWayPointID")
        if context.object.data.name == "EvilEnemyFloatThunder":
            col.prop(context.object, "float_AttackInterval")
            col.prop(context.object, "float_AttackTime")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_StartTime")
        if context.object.data.name == "EvilEnemyNightmareD":
            col.prop(context.object, "integer_FirstState")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_PatrolType")
            col.prop(context.object, "integer_Personality")
            col.prop(context.object, "integer_StartWayPointID")
        if context.object.data.name == "EvilEnemyKillerBee":
            col.prop(context.object, "integer_FirstState")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_PatrolType")
            col.prop(context.object, "integer_Personality")
            col.prop(context.object, "integer_StartWayPointID")
        if context.object.data.name == "SpreadThunderCollision":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Length")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "integer_DefaultStatus")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Shape_Type")
        if context.object.data.name == "EvilEnemyEggFighterST":
            col.prop(context.object, "integer_FirstState")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_PatrolType")
            col.prop(context.object, "integer_Personality")
            col.prop(context.object, "integer_StartWayPointID")
        if context.object.data.name == "EvilEnemyNightmareR":
            col.prop(context.object, "integer_FirstState")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_PatrolType")
            col.prop(context.object, "integer_Personality")
            col.prop(context.object, "integer_StartWayPointID")
        if context.object.data.name == "EvilEnemyMoleelHole":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsHomeHole")
            col.prop(context.object, "float_MoleelCount")
            col.prop(context.object, "float_Personality")
            col.prop(context.object, "id_list_TargetList")
        if context.object.data.name == "EvilEnemyEggFighterR":
            col.prop(context.object, "integer_FirstState")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_PatrolType")
            col.prop(context.object, "integer_Personality")
            col.prop(context.object, "integer_StartWayPointID")
        if context.object.data.name == "EvilEnemyMasterPower":
            col.prop(context.object, "integer_FirstState")
            col.prop(context.object, "integer_PatrolType")
            col.prop(context.object, "integer_Personality")
            col.prop(context.object, "integer_StartWayPointID")
            col.prop(context.object, "id_list_TargetList")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilEnemyMasterFire":
            col.prop(context.object, "integer_FirstState")
            col.prop(context.object, "integer_PatrolType")
            col.prop(context.object, "integer_Personality")
            col.prop(context.object, "integer_StartWayPointID")
            col.prop(context.object, "id_list_TargetList")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilEnemyFlower":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilEnemyMasterLightning":
            col.prop(context.object, "integer_FirstState")
            col.prop(context.object, "integer_PatrolType")
            col.prop(context.object, "integer_Personality")
            col.prop(context.object, "integer_StartWayPointID")
            col.prop(context.object, "id_list_TargetList")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilEnemyRecklessR":
            col.prop(context.object, "integer_FirstState")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_Personality")
        if context.object.data.name == "eThunderBall":
            col.prop(context.object, "float_AttackInterval")
            col.prop(context.object, "float_AttackTime")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_MoveType")
            col.prop(context.object, "float_StartTime")
        if context.object.data.name == "EvilEnemySpooky":
            col.prop(context.object, "integer_Aggression")
            col.prop(context.object, "integer_FirstState")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilEnemyFloatCannon":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsRevival")
        if context.object.data.name == "EvilEnemySpookyR":
            col.prop(context.object, "float_Aggression")
            col.prop(context.object, "float_FirstState")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EvilEnemyEggFighterC":
            col.prop(context.object, "integer_FirstState")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_PatrolType")
            col.prop(context.object, "integer_Personality")
            col.prop(context.object, "integer_StartWayPointID")
        if context.object.data.name == "ChinaLotusFlower":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "IceBombManager":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "Boss_Moray":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "Boss_Petra":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "ChinaLotusLeafL":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "Boss_Phoenix":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "Fence":
            col.prop(context.object, "float_DownWaitTime")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_UpWaitTime")
        if context.object.data.name == "WaterJar":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "BossEggDragoonBattlePlatform":
            col.prop(context.object, "float_AddRangeDistance")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsDefaultHide")
            col.prop(context.object, "bool_IsLast")
            col.prop(context.object, "integer_Type")
        if context.object.data.name == "BossEggDragoon":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "ChinaLotusLeafS":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EggBoss_HavokGenerator":
            col.prop(context.object, "float_AngularVelocity")
            col.prop(context.object, "float_DebrisVelocity")
            col.prop(context.object, "float_FirstVelocity")
            col.prop(context.object, "float_GenerateTime")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_KillTime")
            col.prop(context.object, "bool_evil_egbboss_obj_hh_crane_S")
            col.prop(context.object, "bool_evil_egbboss_obj_hh_floatfloorB_S")
            col.prop(context.object, "bool_evil_egbboss_obj_hh_rockA_S")
            col.prop(context.object, "bool_evil_egbboss_obj_hh_rockB_S")
            col.prop(context.object, "bool_evil_egbboss_obj_hh_rockC_S")
            col.prop(context.object, "bool_evil_egbboss_obj_hh_rockD_S")
            col.prop(context.object, "bool_evil_egbboss_obj_hh_rockE_S")
        if context.object.data.name == "Cannon":
            col.prop(context.object, "float_ShotAngle")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_SetRotation")
            col.prop(context.object, "bool_IsControllableShotAngle")
            col.prop(context.object, "float_FirstSpeed")
            col.prop(context.object, "float_OutOfControl")
            col.prop(context.object, "float_KeepVelocityDistance")
            col.prop(context.object, "bool_IsPathChange")
            col.prop(context.object, "bool_IsWallWalk")
        if context.object.data.name == "ChangeToneMapVolume":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Length")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_DefaultStatus")
            col.prop(context.object, "float_EaseTime")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_ID")
            col.prop(context.object, "bool_IsCastShadow")
            col.prop(context.object, "float_LuminanceHigh")
            col.prop(context.object, "float_LuminanceLow")
            col.prop(context.object, "float_Range")
            col.prop(context.object, "float_Shape_Type")
            col.prop(context.object, "float_ToneMapMiddleGray")
            col.prop(context.object, "float_ToneMapSimpleScale")
        if context.object.data.name == "EventCollision":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Length")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "integer_DefaultStatus")
            col.prop(context.object, "integer_Durability")
            col.prop(context.object, "integer_Event0")
            col.prop(context.object, "integer_Event1")
            col.prop(context.object, "integer_Event2")
            col.prop(context.object, "integer_Event3")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_Shape_Type")
            col.prop(context.object, "id_list_TargetList0")
            col.prop(context.object, "id_list_TargetList1")
            col.prop(context.object, "id_list_TargetList2")
            col.prop(context.object, "id_list_TargetList3")
            col.prop(context.object, "float_Timer0")
            col.prop(context.object, "float_Timer1")
            col.prop(context.object, "float_Timer2")
            col.prop(context.object, "float_Timer3")
            col.prop(context.object, "integer_TriggerType")
        if context.object.data.name == "WayPointDay":
            col.prop(context.object, "integer_EventID")
            col.prop(context.object, "float_EventTime")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_ID")
            col.prop(context.object, "integer_NextID")
            col.prop(context.object, "integer_WayPointType")
        if context.object.data.name == "EnemyStopCollision":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_EventCollision_Depth")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "MissionGoalPoint":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "ChangeToneMapBegin":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_EaseTime")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_ID")
            col.prop(context.object, "float_ToneMapMiddleGray")
            col.prop(context.object, "float_ToneMapSimpleScale")
        if context.object.data.name == "WayPoint":
            col.prop(context.object, "integer_EventID")
            col.prop(context.object, "float_EventTime")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_ID")
            col.prop(context.object, "integer_NextID")
            col.prop(context.object, "integer_WayPointType")
        if context.object.data.name == "EventSetter":
            col.prop(context.object, "float_Condition")
            col.prop(context.object, "integer_Event0")
            col.prop(context.object, "integer_Event1")
            col.prop(context.object, "integer_Event2")
            col.prop(context.object, "integer_Event3")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "id_list_TargetList0")
            col.prop(context.object, "id_list_TargetList1")
            col.prop(context.object, "id_list_TargetList2")
            col.prop(context.object, "id_list_TargetList3")
            col.prop(context.object, "float_Timer0")
            col.prop(context.object, "float_Timer1")
            col.prop(context.object, "float_Timer2")
            col.prop(context.object, "float_Timer3")
            col.prop(context.object, "float_TimesType")
            col.prop(context.object, "float_Trigger")
            col.prop(context.object, "id_list_TriggerList")
        if context.object.data.name == "EventPathHoldingStart":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "ChangePathCollision":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Length")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_DefaultStatus")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsCastShadow")
            col.prop(context.object, "float_Range")
            col.prop(context.object, "float_Shape_Type")
            col.prop(context.object, "vector_TargetDirection")
            col.prop(context.object, "float_Type")
        if context.object.data.name == "TerrainFloatParameterChangerCollision":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_ParameterType")
            col.prop(context.object, "float_m_Scale")
            col.prop(context.object, "float_m_Value")
        if context.object.data.name == "ProgressSequence":
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "TerrainInstanceSubsetRenderCollision2":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsCastShadow")
            col.prop(context.object, "float_Range")
            col.prop(context.object, "integer_SubsetID")
            col.prop(context.object, "integer_VisibilityType")
        if context.object.data.name == "TerrainInstanceSubsetRenderCollision":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_SubsetID")
        if context.object.data.name == "SequenceChangeCollision":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Length")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_DefaultStatus")
            col.prop(context.object, "string_Event")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Shape_Type")
            col.prop(context.object, "float_Type")
        if context.object.data.name == "TerrainGroupSubsetLoadCollision":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_IsCastShadow")
            col.prop(context.object, "integer_LoadType")
            col.prop(context.object, "float_Range")
            col.prop(context.object, "integer_SubsetID")
            col.prop(context.object, "integer_LoadTypeBack")
            col.prop(context.object, "integer_LoadTypeFront")
            col.prop(context.object, "integer_SubsetID_1")
            col.prop(context.object, "integer_SubsetID_2")
            col.prop(context.object, "integer_SubsetID_3")
            col.prop(context.object, "integer_SubsetID_4")
        if context.object.data.name == "ChangeToneMapEnd":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_ID")
        if context.object.data.name == "Grouper":
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "vector_GroupMove")
            col.prop(context.object, "id_list_TargetList")
        if context.object.data.name == "EventCollision2":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Length")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "integer_DefaultStatus")
            col.prop(context.object, "integer_EventEnter")
            col.prop(context.object, "integer_EventLeave")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "integer_Shape_Type")
            col.prop(context.object, "id_list_TargetListEnter")
            col.prop(context.object, "id_list_TargetListLeave")
            col.prop(context.object, "float_TimerEnter")
            col.prop(context.object, "float_TimerLeave")
        if context.object.data.name == "TerrainParameterChangerCollision":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_m_CullingFarDistance")
        if context.object.data.name == "EventPathHoldingFinish":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EndDynamicPreloadingCollision":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_GroundOffset")
        if context.object.data.name == "EventPathHolding":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Length")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_DefaultStatus")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "float_Shape_Type")
        if context.object.data.name == "StartDynamicPreloadingCollision":
            col.prop(context.object, "float_Collision_Height")
            col.prop(context.object, "float_Collision_Width")
            col.prop(context.object, "float_GroundOffset")
            col.prop(context.object, "bool_m_GIEnable")
            col.prop(context.object, "float_m_MinGIMipLevel")
            col.prop(context.object, "float_m_TargetRadius")
            col.prop(context.object, "bool_m_TerrainEnable")
        if context.object.data.name == "WarpPoint":
            col.prop(context.object, "float_GroundOffset")
